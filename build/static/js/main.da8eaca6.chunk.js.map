{"version":3,"sources":["Nav/Nav.module.css","Error/Error.module.css","Test/h4/common/c1-SuperInputText/SuperInputText.module.css","Test/h4/HW4.module.css","Test/h4/common/c2-SuperButton/SuperButton.module.css","Test/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","Test/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","Test/h6/HW6.module.css","Test/h7/HW7.module.css","Login/Login.module.css","Register/Register.module.css","Profile/Profile.module.css","PasswordRecovery/PasswordRecovery.module.css","TypeNewPassword/TypeNewPassword.module.css","Test/h11/HW11.module.css","Login/Login.tsx","Register/Register.tsx","Profile/Profile.tsx","PasswordRecovery/PasswordRecovery.tsx","TypeNewPassword/TypeNewPassword.tsx","Nav/Nav.tsx","Test/h4/common/c1-SuperInputText/SuperInputText.tsx","Test/h4/common/c2-SuperButton/SuperButton.tsx","Test/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","Test/h4/HW4.tsx","Test/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","Test/h6/localStorage/localStorage.ts","Test/h6/HW6.tsx","Test/h7/common/c5-SuperSelect/SuperSelect.tsx","Test/h7/common/c6-SuperRadio/SuperRadio.tsx","Test/h7/HW7.tsx","Test/h11/common/c7-SuperRange/SuperRange.tsx","Test/h11/common/c8-SuperDoubleRange/SuperDoubleRange.tsx","Test/h11/HW11.tsx","Test/Test.tsx","Error/Error.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Login","className","s","login","Register","register","Profile","profile","PasswordRecovery","recovery","TypeNewPassword","newPassword","Nav","nav","item","to","activeClassName","active","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","useState","text","setText","showAlert","alert","setChecked","column","blue","onClick","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","spanText","editableSpan","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","hwsix","undefined","buttons","SuperSelect","options","onChangeOption","mappedOptions","map","o","i","SuperRadio","name","onChangeCallback","arr","HW7","superSelect","useStyles","makeStyles","root","width","SuperRange","onChangeRange","value1","setValue1","classes","Slider","Array","isArray","valueLabelDisplay","aria-labelledby","SuperDoubleRange","value2","setValue2","HW11","rangeBlock","TestPage","Error","errorBlock","container","errorText","pageNotFound","link","App","path","render","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da8eaca6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3F7VF\",\"active\":\"Nav_active__3nWya\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorBlock\":\"Error_errorBlock__3-4pW\",\"container\":\"Error_container__2RlQq\",\"errorText\":\"Error_errorText__2ozDB\",\"link\":\"Error_link__2-0kI\",\"pageNotFound\":\"Error_pageNotFound__SxkAK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__16ubX\",\"errorInput\":\"SuperInputText_errorInput__BJF_v\",\"error\":\"SuperInputText_error__1L1o7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3lrwR\",\"column\":\"HW4_column__nJpV8\",\"testSpanError\":\"HW4_testSpanError__LvQoI\",\"input\":\"HW4_input__2rWiu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2mp23\",\"red\":\"SuperButton_red__2xpw9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__228w9\",\"spanClassName\":\"SuperCheckbox_spanClassName__NWHI_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpan\":\"SuperEditableSpan_editableSpan__349Bf\",\"spanText\":\"SuperEditableSpan_spanText__ZF4uv\",\"className\":\"SuperEditableSpan_className__2TyxX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hwsix\":\"HW6_hwsix__2aGNO\",\"buttons\":\"HW6_buttons__3yN2G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superSelect\":\"HW7_superSelect__2wRAY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1lDhE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"register\":\"Register_register__3wg0X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2N0Ai\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recovery\":\"PasswordRecovery_recovery__Ey8U7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPassword\":\"TypeNewPassword_newPassword__30P24\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rangeBlock\":\"HW11_rangeBlock__1ZpQs\"};","import s from './Login.module.css'\n\nexport function Login() {\n   return(\n       <div className={s.login}> Login </div>\n   )\n}","import s from './Register.module.css'\n\nexport function Register() {\n    return(\n        <div className={s.register}>Register</div>\n    )\n}","import s from './Profile.module.css'\n\nexport function Profile() {\n    return (\n        <div className={s.profile}>\n            Profile\n        </div>\n    );\n};","import s from './PasswordRecovery.module.css'\n\nexport function PasswordRecovery() {\n    return(\n        <div className={s.recovery}>\n            Password Recovery\n        </div>\n    )\n}","import s from './TypeNewPassword.module.css'\n\nexport function TypeNewPassword() {\n    return(\n        <div className={s.newPassword}>\n            Type new password\n        </div>\n    )\n}","import { NavLink } from \"react-router-dom\";\nimport s from './Nav.module.css'\n\nexport function Nav() {\n    return(\n        <div className={s.nav}>\n            <div className={s.item}>\n                <NavLink to='/login' activeClassName={s.active}>Login</NavLink>\n            </div>\n            <div className={`${s.item} ${s.active}`}>\n                <NavLink to='/register' activeClassName={s.active}>Register</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='*' activeClassName={s.active}>Error 404</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/recovery' activeClassName={s.active}>Password Recovery</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/newpassword' activeClassName={s.active}>Type New Password</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/testpage' activeClassName={s.active}>Test Page</NavLink>\n            </div>\n        </div>\n    )\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n"," import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            Super input text, Super button and Super checkbox\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\nimport s from './SuperEditableSpan.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        // setEditMode() // выключить editMode при нажатии Enter\n        setEditMode(false)\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\n        setEditMode(false)\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        // setEditMode() // включить editMode при двойном клике\n        setEditMode(true)\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${s.spanText} ${className}`\n\n    return (\n        <div className={s.editableSpan}>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </div>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\nimport s from './HW6.module.css'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        setValue(restoreState<string>('editable-span-value',''))\n        // setValue()\n    }\n\n    return (\n        <div>\n            <hr/>\n            Super Editable Span\n\n            {/*should work (должно работать)*/}\n            <div className={s.hwsix}>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text...'}}\n                />\n            </div>\n            <div className={s.buttons}>\n                <SuperButton onClick={save}>save</SuperButton>\n                <SuperButton onClick={restore}>restore</SuperButton>\n            </div>\n\n\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        <option key={o + '-' + i} value={o}>{o}</option>\n    )) : []; // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        // onChange, onChangeOption\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    return (\n        <select onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    );\n}\n\nexport default SuperSelect;\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // onChange, onChangeOption\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\n        <label key={name + \"-\" + i}>\n            <input\n                type={\"radio\"}\n                name={name}\n                checked={o === value}\n                value={o}\n                onChange={onChangeCallback}\n                {...restProps}\n                // name, checked, value, onChange\n            />\n            {o}\n        </label>\n    )) : [];\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    );\n}\n\nexport default SuperRadio;\n","import React, {useState} from \"react\";\nimport SuperSelect from \"./common/c5-SuperSelect/SuperSelect\";\nimport SuperRadio from \"./common/c6-SuperRadio/SuperRadio\";\nimport s from './HW7.module.css'\n\nconst arr = [\"x\", \"y\", \"z\"];\n\nfunction HW7() {\n    const [value, onChangeOption] = useState(arr[1]);\n\n    return (\n        <div>\n            <hr/>\n            Super Select and Super Radio\n\n            {/*should work (должно работать)*/}\n            <div className={s.superSelect}>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div className={s.superSelect}>\n                <SuperRadio\n                    name={\"radio\"}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW7;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperRange.module.css\";\nimport Slider from '@material-ui/core/Slider';\nimport {makeStyles} from '@material-ui/core/styles';\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeRange?: (value: number) => void\n    value1: number\n    setValue1: (value: number) => void\n};\n\nconst useStyles = makeStyles({\n    root: {\n        width: 300,\n    },\n});\n\nconst SuperRange: React.FC<SuperRangePropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeRange,\n        className, value1, setValue1,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const classes = useStyles()\n\n    const onChangeCallback = (e: ChangeEvent<{}>, value: number | number[]) => {\n        if(!Array.isArray(value)){\n            setValue1(value)\n        }\n    }\n\n    // @ts-ignore\n    return (\n        <div className={classes.root}>\n            <Slider\n                value={value1}\n                onChange={onChangeCallback}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"non-linear-slider\"\n            />\n        </div>\n    );\n}\n\nexport default SuperRange;\n","import React, {ChangeEvent} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\ntype SuperDoubleRangePropsType = {\n    value?: [number, number]\n    onChangeRange?: (value: [number, number]) => void\n    value1:number\n    setValue1: (value: number) => void\n    value2: number\n    setValue2: (value: number) => void\n    // min, max, step, disable, ...\n}\n\nconst useStyles = makeStyles({\n    root: {\n        width: 300,\n    },\n});\n\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\n    {\n        onChangeRange,value, value1, setValue1, value2, setValue2\n\n        // min, max, step, disable\n    }\n) => {\n    const classes = useStyles();\n\n    const onChangeCallback = (e: ChangeEvent<{}>, value: number | number[]) => {\n        if(Array.isArray(value)){\n            setValue1(value[0])\n            setValue2(value[1])\n        }\n    };\n\n    // сделать самому, можно подключать библиотеки\n\n    return (\n        <div className={classes.root}>\n            <Slider\n                value={[value1, value2]}\n                onChange={onChangeCallback}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n            />\n        </div>\n    );\n}\n\nexport default SuperDoubleRange;\n","import React, {useState} from \"react\";\nimport SuperRange from \"./common/c7-SuperRange/SuperRange\";\nimport SuperDoubleRange from \"./common/c8-SuperDoubleRange/SuperDoubleRange\";\nimport s from './HW11.module.css'\n\nfunction HW11() {\n    const [value1, setValue1] = useState<number>(0);\n    const [value2, setValue2] = useState<number>(100);\n\n    return (\n        <div>\n            <hr/>\n            Super Range and Super Double Range\n\n            {/*should work (должно работать)*/}\n            <div className={s.rangeBlock}>\n                <div>\n                    <span>{value1}</span>\n                    <SuperRange value1={value1} setValue1={setValue1}\n                        // сделать так чтоб value1 изменялось\n                    />\n                </div>\n\n                <div>\n                    <span>{value1}</span>\n                    <SuperDoubleRange value1={value1} setValue1={setValue1} value2={value2} setValue2={setValue2}\n                        // сделать так чтоб value1 и value2 изменялось\n                    />\n                    <span>{value2}</span>\n                </div>\n            </div>\n\n\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW11;\n","import HW4 from './h4/HW4';\nimport HW6 from './h6/HW6';\nimport HW7 from './h7/HW7';\nimport HW11 from './h11/HW11';\n\nexport function TestPage() {\n    return (\n        <div>\n            <HW4/>\n            <HW6/>\n            <HW7/>\n            <HW11/>\n        </div>\n    )\n}","import {Link} from 'react-router-dom';\nimport s from './Error.module.css'\n\nexport function Error() {\n    return (\n        <div className={s.errorBlock}>\n            <div className={s.container}>\n                <div className={s.errorText}>\n                    404\n                </div>\n                <div className={s.pageNotFound}>\n                    Page not found\n                </div>\n                <Link className={s.link} to=\"/login\">\n                    Go to Login\n                </Link>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport {Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport {Login} from './Login/Login';\nimport {Register} from './Register/Register';\nimport {Profile} from './Profile/Profile';\nimport {PasswordRecovery} from './PasswordRecovery/PasswordRecovery';\nimport {TypeNewPassword} from './TypeNewPassword/TypeNewPassword';\nimport {Nav} from './Nav/Nav';\nimport {TestPage} from './Test/Test';\nimport {Error} from './Error/Error';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Nav/>\n            <Switch>\n                <Route path=\"/login\"\n                       render={() => <Login/>}/>\n                <Route path=\"/register\"\n                       render={() => <Register/>}/>\n                <Route path=\"/profile\"\n                       render={() => <Profile/>}/>\n                <Route exact path=\"/recovery\"\n                       render={() => <PasswordRecovery/>}/>\n                <Route exact path=\"/newpassword\"\n                       render={() => <TypeNewPassword/>}/>\n                <Route exact path=\"/testpage\"\n                       render={() => <TestPage/>}/>\n                <Route exact path=\"*\"\n                       render={() => <Error/>}/>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}