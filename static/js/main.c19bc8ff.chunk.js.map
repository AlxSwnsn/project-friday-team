{"version":3,"sources":["Login/Login.tsx","dal/api.ts","state/register-reducer.ts","Snackbar/ErrorSnackBar.tsx","Register/Register.tsx","Profile/Profile.tsx","PasswordRecovery/PasswordRecovery.tsx","TypeNewPassword/TypeNewPassword.tsx","Nav/Nav.tsx","Test/h4/common/c1-SuperInputText/SuperInputText.tsx","Test/h4/common/c2-SuperButton/SuperButton.tsx","Test/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","Test/h4/HW4.tsx","Test/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","Test/h6/localStorage/localStorage.ts","Test/h6/HW6.tsx","Test/h7/common/c5-SuperSelect/SuperSelect.tsx","Test/h7/common/c6-SuperRadio/SuperRadio.tsx","Test/h7/HW7.tsx","Test/h11/common/c7-SuperRange/SuperRange.tsx","Test/h11/common/c8-SuperDoubleRange/SuperDoubleRange.tsx","Test/h11/HW11.tsx","Test/Test.tsx","Error/Error.tsx","App.tsx","reportWebVitals.ts","state/store.ts","state/login-reducer.ts","state/profile-reducer.ts","state/password-reducer.ts","index.tsx","Nav/Nav.module.css","Register/Register.module.css","Error/Error.module.css","Test/h4/common/c1-SuperInputText/SuperInputText.module.css","Test/h4/HW4.module.css","Test/h4/common/c2-SuperButton/SuperButton.module.css","Test/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","Test/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","Test/h6/HW6.module.css","Test/h7/HW7.module.css","Login/Login.module.css","Profile/Profile.module.css","PasswordRecovery/PasswordRecovery.module.css","TypeNewPassword/TypeNewPassword.module.css","Test/h11/HW11.module.css"],"names":["Login","className","s","login","instance","axios","create","baseURL","withCredentials","AuthAPI","email","password","post","initialState","isRegister","status","error","setStatusAC","type","setErrorAC","Alert","props","elevation","variant","ErrorSnackbar","useSelector","state","register","dispatch","useDispatch","SnackClose","event","reason","isOpen","Snackbar","open","autoHideDuration","onClose","severity","Register","to","registerBlock","form","initialValues","confirmPassword","validate","values","errors","test","length","onSubmit","setSubmitting","then","res","catch","touched","handleChange","handleBlur","handleSubmit","isSubmitting","formInput","TextField","name","required","id","onChange","onBlur","value","placeholder","helperText","buttonBlock","cancelButton","registerButton","disabled","Profile","profile","PasswordRecovery","recovery","TypeNewPassword","newPassword","Nav","nav","item","activeClassName","active","SuperInputText","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","e","currentTarget","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","useState","text","setText","showAlert","alert","setChecked","column","blue","onClick","SuperEditableSpan","autoFocus","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","spanText","editableSpan","saveState","stateAsString","JSON","stringify","localStorage","setItem","x","y","HW6","setValue","hwsix","undefined","buttons","defaultState","getItem","parse","restoreState","SuperSelect","options","onChangeOption","mappedOptions","map","o","i","SuperRadio","onChangeCallback","arr","HW7","superSelect","useStyles","makeStyles","root","width","SuperRange","onChangeRange","value1","setValue1","classes","Slider","Array","isArray","valueLabelDisplay","aria-labelledby","SuperDoubleRange","value2","setValue2","HW11","rangeBlock","TestPage","Error","errorBlock","container","errorText","pageNotFound","link","App","LinearProgress","color","path","component","render","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c19bc8ff.chunk.js","sourcesContent":["import s from './Login.module.css'\n\nexport function Login() {\n   return(\n       <div className={s.login}>Login</div>\n   )\n}","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\n    withCredentials: true\n})\n\nexport type CreateUserType = {\n    email: string\n    password: string\n}\n\nexport const AuthAPI = {\n    createUser(email: string, password: string) {\n        return instance.post<CreateUserType>('/auth/register', {email, password});\n    }\n}","import {Dispatch} from 'redux'\nimport {AuthAPI} from '../dal/api';\n\n\ntype setErrorACType = {\n    type: 'APP/SET-ERROR'\n    error?: string | null\n}\n\ntype setStatusACType = {\n    type: 'APP/SET-STATUS'\n    status: boolean\n}\n\ntype setRegisterStatusACType = {\n    type: 'APP/SET-REGISTER-STATUS'\n    isRegister: boolean\n}\n\ntype initialStateType = {\n    isRegister: boolean\n    status: boolean\n    error?: string | null\n}\n\nconst initialState = {\n    isRegister: false,\n    status: false,\n    error: null\n}\n\ntype ActionsType = setErrorACType | setStatusACType | setRegisterStatusACType\n\nexport const registerReducer = (state: initialStateType = initialState, action: ActionsType): initialStateType => {\n    let copyState = {...state}\n    switch (action.type) {\n        case 'APP/SET-ERROR':\n            return {\n                ...state,\n                error: action.error\n            }\n        case 'APP/SET-STATUS':\n            return {\n                ...state,\n                status: action.status\n            }\n        case 'APP/SET-REGISTER-STATUS':\n            return {\n                ...state,\n                isRegister: action.isRegister\n            }\n        default:\n            return state\n    }\n}\n\nexport const setStatusAC = (status: boolean): setStatusACType => ({type: 'APP/SET-STATUS', status})\nexport const setErrorAC = (error: string | null): setErrorACType => ({type: 'APP/SET-ERROR', error})\nexport const setRegisterStatus = (isRegister: boolean): setRegisterStatusACType => ({\n    type: 'APP/SET-REGISTER-STATUS',\n    isRegister\n} as const)\n\nexport const CreateUserThunk = (email: string, password: string) => {\n    return (dispatch: Dispatch) => {\n        dispatch(setStatusAC(true))\n        AuthAPI.createUser(email, password)\n            .then((res) => {\n                dispatch(setStatusAC(false))\n                dispatch(setRegisterStatus(true))\n            })\n            .catch((error) => {\n                if (!error.error) {\n                    dispatch(setErrorAC('Some Error! More details in console.'))\n                } else {\n                    dispatch(setErrorAC(error.error))\n                }\n                dispatch(setStatusAC(false))\n            })\n    }\n}","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { AppRootStateType } from '../state/store';\nimport { setErrorAC } from '../state/register-reducer';\n\nfunction Alert(props : any) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport function ErrorSnackbar() {\n    const error = useSelector<AppRootStateType, string | null | undefined>(state => state.register.error)\n    const dispatch = useDispatch()\n\n    const SnackClose = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        debugger\n        dispatch(setErrorAC(null))\n    };\n\n    const isOpen = error != null\n\n    return (\n        <div>\n            <Snackbar open={isOpen} autoHideDuration={3000} onClose={SnackClose}>\n                <Alert open={isOpen} onClose={SnackClose} severity=\"error\" autoHideDuration={3000}>\n                    {error}\n                </Alert>\n            </Snackbar>\n        </div>\n    );\n}","import s from './Register.module.css'\nimport {Formik} from 'formik';\nimport {CreateUserThunk} from '../state/register-reducer';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {TextField} from '@material-ui/core';\nimport {AppRootStateType} from '../state/store';\nimport { Redirect } from 'react-router-dom';\nimport React from 'react';\nimport {ErrorSnackbar} from '../Snackbar/ErrorSnackBar';\n\n\nexport const Register: React.FC = () => {\n    let dispatch = useDispatch()\n\n    let isRegister = useSelector<AppRootStateType, boolean>(state => state.register.isRegister)\n\n    if(isRegister){\n        return <Redirect to=\"/login\" />\n    }\n\n    return (\n        <div className={s.register}>\n            <div className={s.registerBlock}>\n                <h1>It-incubator</h1>\n                <h2>Sign Up</h2>\n                <div className={s.form}>\n                    <Formik\n                        initialValues={{email: '', password: '', confirmPassword: ''}}\n                        validate={values => {\n                            const errors:any = {};\n                            if (!values.email) {\n                                errors.email = 'Required';\n                            } else if (\n                                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                            ) {\n                                errors.email = 'Invalid email address';\n                            }\n                            if (!values.password) {\n                                errors.password = 'Required';\n                            } else if (values.password.length < 7) {\n                                errors.password = 'Password too short';\n                            }\n                            if (!values.confirmPassword) {\n                                errors.confirmPassword = 'Required';\n                            } else if (values.password != values.confirmPassword) {\n                                errors.password = `Password don't match`;\n                            }\n                            return errors;\n                        }}\n                        onSubmit={(values, {setSubmitting}) => {\n                            dispatch(CreateUserThunk(values.email, values.password))\n                            setSubmitting(false);\n                        }}\n                    >\n                        {({\n                              values,\n                              errors,\n                              touched,\n                              handleChange,\n                              handleBlur,\n                              handleSubmit,\n                              isSubmitting,\n                              /* and other goodies */\n                          }) => (<div className={s.formInput}>\n                                <form onSubmit={handleSubmit}>\n                                    <TextField type=\"email\"\n                                               name=\"email\"\n                                               required id=\"standard-required\"\n                                               onChange={handleChange}\n                                               onBlur={handleBlur}\n                                               value={values.email}\n                                               placeholder={'Email'}\n                                               helperText={\n                                                   errors.email && touched.email\n                                                       ? errors.email\n                                                       : 'Enter email-id'\n                                               }/>\n                                    <TextField id=\"password\"\n                                               type=\"password\"\n                                               name=\"password\"\n                                               onChange={handleChange}\n                                               onBlur={handleBlur}\n                                               value={values.password}\n                                               helperText={\n                                                   errors.password && touched.password\n                                                       ? errors.password\n                                                       : 'Enter password'\n                                               }\n                                               placeholder={'Password'}/>\n                                    <TextField id=\"confirmPassword\"\n                                               type=\"password\"\n                                               name=\"confirmPassword\"\n                                               onChange={handleChange}\n                                               onBlur={handleBlur}\n                                               value={values.confirmPassword}\n                                               placeholder={'Confirm Password'}\n                                               helperText={\n                                                   errors.confirmPassword && touched.confirmPassword\n                                                       ? errors.confirmPassword\n                                                       : 'Enter the password again'\n                                               }/>\n                                    <div className={s.buttonBlock}>\n                                        <button className={s.cancelButton}>\n                                            Cancel\n                                        </button>\n                                        <button className={s.registerButton} type=\"submit\" disabled={isSubmitting}>\n                                            Register\n                                        </button>\n                                    </div>\n                                </form>\n                            </div>\n                        )}\n                    </Formik>\n                </div>\n            </div>\n            <ErrorSnackbar/>\n        </div>\n    )\n};","import s from './Profile.module.css'\n\nexport function Profile() {\n    return (\n        <div className={s.profile}>\n            Profile\n        </div>\n    );\n};","import s from './PasswordRecovery.module.css'\n\nexport function PasswordRecovery() {\n    return(\n        <div className={s.recovery}>\n            Password Recovery\n        </div>\n    )\n}","import s from './TypeNewPassword.module.css'\n\nexport function TypeNewPassword() {\n    return(\n        <div className={s.newPassword}>\n            Type new password\n        </div>\n    )\n}","import { NavLink } from \"react-router-dom\";\nimport s from './Nav.module.css'\nimport {LinearProgress} from '@material-ui/core';\nimport React from 'react';\n\nexport function Nav() {\n    return(\n        <div className={s.nav}>\n            <div className={s.item}>\n                <NavLink to='/login' activeClassName={s.active}>Login</NavLink>\n            </div>\n            <div className={`${s.item} ${s.active}`}>\n                <NavLink to='/register' activeClassName={s.active}>Register</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='*' activeClassName={s.active}>Error 404</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/recovery' activeClassName={s.active}>Password Recovery</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/newpassword' activeClassName={s.active}>Type New Password</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/testpage' activeClassName={s.active}>Test Page</NavLink>\n            </div>\n        </div>\n    )\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n"," import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            Super input text, Super button and Super checkbox\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\nimport s from './SuperEditableSpan.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        // setEditMode() // выключить editMode при нажатии Enter\n        setEditMode(false)\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\n        setEditMode(false)\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        // setEditMode() // включить editMode при двойном клике\n        setEditMode(true)\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${s.spanText} ${className}`\n\n    return (\n        <div className={s.editableSpan}>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </div>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\n// const state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\nimport s from './HW6.module.css'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        setValue(restoreState<string>('editable-span-value',''))\n        // setValue()\n    }\n\n    return (\n        <div>\n            <hr/>\n            Super Editable Span\n\n            {/*should work (должно работать)*/}\n            <div className={s.hwsix}>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text...'}}\n                />\n            </div>\n            <div className={s.buttons}>\n                <SuperButton onClick={save}>save</SuperButton>\n                <SuperButton onClick={restore}>restore</SuperButton>\n            </div>\n\n\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        <option key={o + '-' + i} value={o}>{o}</option>\n    )) : []; // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        // onChange, onChangeOption\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    return (\n        <select onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    );\n}\n\nexport default SuperSelect;\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // onChange, onChangeOption\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\n        <label key={name + \"-\" + i}>\n            <input\n                type={\"radio\"}\n                name={name}\n                checked={o === value}\n                value={o}\n                onChange={onChangeCallback}\n                {...restProps}\n                // name, checked, value, onChange\n            />\n            {o}\n        </label>\n    )) : [];\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    );\n}\n\nexport default SuperRadio;\n","import React, {useState} from \"react\";\nimport SuperSelect from \"./common/c5-SuperSelect/SuperSelect\";\nimport SuperRadio from \"./common/c6-SuperRadio/SuperRadio\";\nimport s from './HW7.module.css'\n\nconst arr = [\"x\", \"y\", \"z\"];\n\nfunction HW7() {\n    const [value, onChangeOption] = useState(arr[1]);\n\n    return (\n        <div>\n            <hr/>\n            Super Select and Super Radio\n\n            {/*should work (должно работать)*/}\n            <div className={s.superSelect}>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div className={s.superSelect}>\n                <SuperRadio\n                    name={\"radio\"}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW7;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport Slider from '@material-ui/core/Slider';\nimport {makeStyles} from '@material-ui/core/styles';\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeRange?: (value: number) => void\n    value1: number\n    setValue1: (value: number) => void\n};\n\nconst useStyles = makeStyles({\n    root: {\n        width: 300,\n    },\n});\n\nconst SuperRange: React.FC<SuperRangePropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeRange,\n        className, value1, setValue1,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const classes = useStyles()\n\n    const onChangeCallback = (e: ChangeEvent<{}>, value: number | number[]) => {\n        if(!Array.isArray(value)){\n            setValue1(value)\n        }\n    }\n\n    // @ts-ignore\n    return (\n        <div className={classes.root}>\n            <Slider\n                value={value1}\n                onChange={onChangeCallback}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"non-linear-slider\"\n            />\n        </div>\n    );\n}\n\nexport default SuperRange;\n","import React, {ChangeEvent} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\ntype SuperDoubleRangePropsType = {\n    value?: [number, number]\n    onChangeRange?: (value: [number, number]) => void\n    value1:number\n    setValue1: (value: number) => void\n    value2: number\n    setValue2: (value: number) => void\n    // min, max, step, disable, ...\n}\n\nconst useStyles = makeStyles({\n    root: {\n        width: 300,\n    },\n});\n\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\n    {\n        onChangeRange,value, value1, setValue1, value2, setValue2\n\n        // min, max, step, disable\n    }\n) => {\n    const classes = useStyles();\n\n    const onChangeCallback = (e: ChangeEvent<{}>, value: number | number[]) => {\n        if(Array.isArray(value)){\n            setValue1(value[0])\n            setValue2(value[1])\n        }\n    };\n\n    // сделать самому, можно подключать библиотеки\n\n    return (\n        <div className={classes.root}>\n            <Slider\n                value={[value1, value2]}\n                onChange={onChangeCallback}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n            />\n        </div>\n    );\n}\n\nexport default SuperDoubleRange;\n","import React, {useState} from \"react\";\nimport SuperRange from \"./common/c7-SuperRange/SuperRange\";\nimport SuperDoubleRange from \"./common/c8-SuperDoubleRange/SuperDoubleRange\";\nimport s from './HW11.module.css'\n\nfunction HW11() {\n    const [value1, setValue1] = useState<number>(0);\n    const [value2, setValue2] = useState<number>(100);\n\n    return (\n        <div>\n            <hr/>\n            Super Range and Super Double Range\n\n            {/*should work (должно работать)*/}\n            <div className={s.rangeBlock}>\n                <div>\n                    <span>{value1}</span>\n                    <SuperRange value1={value1} setValue1={setValue1}\n                        // сделать так чтоб value1 изменялось\n                    />\n                </div>\n\n                <div>\n                    <span>{value1}</span>\n                    <SuperDoubleRange value1={value1} setValue1={setValue1} value2={value2} setValue2={setValue2}\n                        // сделать так чтоб value1 и value2 изменялось\n                    />\n                    <span>{value2}</span>\n                </div>\n            </div>\n\n\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW11;\n","import HW4 from './h4/HW4';\nimport HW6 from './h6/HW6';\nimport HW7 from './h7/HW7';\nimport HW11 from './h11/HW11';\n\nexport function TestPage() {\n    return (\n        <div>\n            <HW4/>\n            <HW6/>\n            <HW7/>\n            <HW11/>\n        </div>\n    )\n}","import {Link} from 'react-router-dom';\nimport s from './Error.module.css'\n\nexport function Error() {\n    return (\n        <div className={s.errorBlock}>\n            <div className={s.container}>\n                <div className={s.errorText}>\n                    404\n                </div>\n                <div className={s.pageNotFound}>\n                    Page not found\n                </div>\n                <Link className={s.link} to=\"/login\">\n                    Go to Login\n                </Link>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport {Login} from './Login/Login';\nimport {Register} from './Register/Register';\nimport {Profile} from './Profile/Profile';\nimport {PasswordRecovery} from './PasswordRecovery/PasswordRecovery';\nimport {TypeNewPassword} from './TypeNewPassword/TypeNewPassword';\nimport {Nav} from './Nav/Nav';\nimport {TestPage} from './Test/Test';\nimport {Error} from './Error/Error';\nimport {useSelector} from 'react-redux';\nimport {AppRootStateType} from './state/store';\nimport {LinearProgress} from '@material-ui/core';\nimport {ErrorSnackbar} from './Snackbar/ErrorSnackBar';\n\nfunction App() {\n    let status = useSelector<AppRootStateType, boolean>(state => state.register.status)\n\n    return (\n        <div className=\"App\">\n            <Nav/>\n            {status && <LinearProgress color='secondary' />}\n                <Switch>\n                    <Route path=\"/login\"\n                           component={Login}/>\n                    <Route path=\"/register\"\n                           render={() => <Register/>}/>\n                    <Route path=\"/profile\"\n                           render={() => <Profile/>}/>\n                    <Route exact path=\"/recovery\"\n                           render={() => <PasswordRecovery/>}/>\n                    <Route exact path=\"/newpassword\"\n                           render={() => <TypeNewPassword/>}/>\n                    <Route exact path=\"/testpage\"\n                           render={() => <TestPage/>}/>\n                    <Route exact path=\"*\"\n                           render={() => <Error/>}/>\n                </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\nimport thunk from 'redux-thunk'\nimport {loginReducer} from './login-reducer';\nimport {profileReducer} from './profile-reducer';\nimport {registerReducer} from './register-reducer';\nimport {passwordReducer} from './password-reducer';\n\nconst rootReducer = combineReducers({\n    login: loginReducer,\n    profile: profileReducer,\n    register: registerReducer,\n    password: passwordReducer\n})\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>\n\n// @ts-ignore\nwindow.store = store;","export const loginReducer = (state = '', action:any) => {\n    switch (action.type) {\n        case '':\n            return state\n        default:\n            return state\n    }\n}","export const profileReducer = (state = '', action:any) => {\n    switch (action.type) {\n        case '':\n            return state\n        default:\n            return state\n    }\n}","export const passwordReducer = (state = '', action:any) => {\n    switch (action.type) {\n        case '':\n            return state\n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {store} from './state/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3F7VF\",\"active\":\"Nav_active__3nWya\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"register\":\"Register_register__3wg0X\",\"registerBlock\":\"Register_registerBlock__3rt27\",\"form\":\"Register_form__3OA63\",\"formInput\":\"Register_formInput__3dmpf\",\"buttonBlock\":\"Register_buttonBlock__2xucS\",\"registerButton\":\"Register_registerButton__3m1fi\",\"cancelButton\":\"Register_cancelButton__133z0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorBlock\":\"Error_errorBlock__3-4pW\",\"container\":\"Error_container__2RlQq\",\"errorText\":\"Error_errorText__2ozDB\",\"link\":\"Error_link__2-0kI\",\"pageNotFound\":\"Error_pageNotFound__SxkAK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__16ubX\",\"errorInput\":\"SuperInputText_errorInput__BJF_v\",\"error\":\"SuperInputText_error__1L1o7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3lrwR\",\"column\":\"HW4_column__nJpV8\",\"testSpanError\":\"HW4_testSpanError__LvQoI\",\"input\":\"HW4_input__2rWiu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2mp23\",\"red\":\"SuperButton_red__2xpw9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__228w9\",\"spanClassName\":\"SuperCheckbox_spanClassName__NWHI_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpan\":\"SuperEditableSpan_editableSpan__349Bf\",\"spanText\":\"SuperEditableSpan_spanText__ZF4uv\",\"className\":\"SuperEditableSpan_className__2TyxX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hwsix\":\"HW6_hwsix__2aGNO\",\"buttons\":\"HW6_buttons__3yN2G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superSelect\":\"HW7_superSelect__2wRAY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1lDhE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2N0Ai\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recovery\":\"PasswordRecovery_recovery__Ey8U7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPassword\":\"TypeNewPassword_newPassword__30P24\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rangeBlock\":\"HW11_rangeBlock__1ZpQs\"};"],"sourceRoot":""}