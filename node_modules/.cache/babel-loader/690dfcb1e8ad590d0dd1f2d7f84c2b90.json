{"ast":null,"code":"import { RestoreAPI } from \"../PasswordRecovery/PasswordRecoveryAPI\";\nconst initialState = {\n  passwordSent: false\n};\nexport const newPasswordReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'APP/PASSWORD-SENT':\n      return { ...state,\n        passwordSent: action.passwordSent\n      };\n\n    default:\n      return state;\n  }\n};\nexport const passwordSentAC = passwordSent => ({\n  type: 'APP/PASSWORD-SENT',\n  passwordSent\n});\nexport const createNewPasswordTC = (password, token) => {\n  return dispatch => {\n    RestoreAPI.create(password, token).then(res => alert(\"Success\")).catch(err => console.log(\"Error\"));\n    dispatch(passwordSentAC(true));\n  };\n};","map":{"version":3,"sources":["/Users/elizavetaspivak/Documents/study/React/project-friday-team/src/state/newPassword-reducer.ts"],"names":["RestoreAPI","initialState","passwordSent","newPasswordReducer","state","action","type","passwordSentAC","createNewPasswordTC","password","token","dispatch","create","then","res","alert","catch","err","console","log"],"mappings":"AACA,SAAQA,UAAR,QAAyB,yCAAzB;AAUA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE;AADG,CAArB;AAIA,OAAO,MAAMC,kBAAkB,GAAG,CAACC,KAAuB,GAAGH,YAA3B,EAAyCI,MAAzC,KAAiE;AAC/F,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,mBAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHF,QAAAA,YAAY,EAAEG,MAAM,CAACH;AAFlB,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAPR;AASH,CAVM;AAYP,OAAO,MAAMG,cAAc,GAAIL,YAAD,KAA4B;AAACI,EAAAA,IAAI,EAAE,mBAAP;AAA4BJ,EAAAA;AAA5B,CAA5B,CAAvB;AAGP,OAAO,MAAMM,mBAAmB,GAAG,CAACC,QAAD,EAAmBC,KAAnB,KAAkC;AACjE,SAAQC,QAAD,IAAwB;AAC3BX,IAAAA,UAAU,CAACY,MAAX,CAAkBH,QAAlB,EAA4BC,KAA5B,EACKG,IADL,CACUC,GAAG,IAAGC,KAAK,CAAC,SAAD,CADrB,EAEKC,KAFL,CAEWC,GAAG,IAAKC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAFnB;AAGAR,IAAAA,QAAQ,CAACJ,cAAc,CAAC,IAAD,CAAf,CAAR;AAGH,GAPD;AAQH,CATM","sourcesContent":["import {Dispatch} from \"redux\";\nimport {RestoreAPI} from \"../PasswordRecovery/PasswordRecoveryAPI\";\n\n\ntype ActionsType = ReturnType<typeof passwordSentAC>\n\n\ntype InitialStateType = {\n    passwordSent: boolean\n}\n\nconst initialState = {\n    passwordSent: false\n}\n\nexport const newPasswordReducer = (state: InitialStateType = initialState, action: ActionsType) => {\n    switch (action.type) {\n        case 'APP/PASSWORD-SENT':\n            return {\n                ...state,\n                passwordSent: action.passwordSent\n            }\n        default:\n            return state\n    }\n}\n\nexport const passwordSentAC = (passwordSent: boolean) => ({type: 'APP/PASSWORD-SENT', passwordSent})\n\n\nexport const createNewPasswordTC = (password: string, token: any) => {\n    return (dispatch: Dispatch) => {\n        RestoreAPI.create(password, token)\n            .then(res=> alert(\"Success\"))\n            .catch(err => (console.log(\"Error\")))\n        dispatch(passwordSentAC(true))\n\n\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}