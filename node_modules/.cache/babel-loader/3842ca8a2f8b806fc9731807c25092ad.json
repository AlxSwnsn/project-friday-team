{"ast":null,"code":"import { setErrorAC, setStatusAC } from './app-reducer';\nimport { RestoreAPI } from '../dal/api';\nconst initialState = {\n  emailIsSent: false\n};\nexport const passwordRecoveryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'APP/EMAIL-IS-SENT':\n      return { ...state,\n        emailIsSent: action.emailIsSent\n      };\n\n    default:\n      return state;\n  }\n};\nexport const emailIsSentAC = emailIsSent => ({\n  type: 'APP/EMAIL-IS-SENT',\n  emailIsSent\n});\nexport const passwordRecoveryTC = email => {\n  return dispatch => {\n    dispatch(setStatusAC(true));\n    RestoreAPI.restore(email).then(() => {\n      dispatch(emailIsSentAC(true));\n      dispatch(setStatusAC(false));\n    }).catch(res => {\n      if (!res.error) {\n        dispatch(setErrorAC('Some Error! More details in console.'));\n      } else {\n        dispatch(setErrorAC(res.error));\n      }\n\n      dispatch(setStatusAC(false));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/elizavetaspivak/Documents/study/React/project-friday-team/src/state/password-reducer.ts"],"names":["setErrorAC","setStatusAC","RestoreAPI","initialState","emailIsSent","passwordRecoveryReducer","state","action","type","emailIsSentAC","passwordRecoveryTC","email","dispatch","restore","then","catch","res","error"],"mappings":"AACA,SAAQA,UAAR,EAAoBC,WAApB,QAAsC,eAAtC;AACA,SAAQC,UAAR,QAAyB,YAAzB;AAOA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE;AADI,CAArB;AAIA,OAAO,MAAMC,uBAAuB,GAAG,CAACC,KAAuB,GAAGH,YAA3B,EAAyCI,MAAzC,KAAiE;AACpG,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,mBAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHF,QAAAA,WAAW,EAAEG,MAAM,CAACH;AAFjB,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAPR;AASH,CAVM;AAYP,OAAO,MAAMG,aAAa,GAAIL,WAAD,KAA2B;AAACI,EAAAA,IAAI,EAAE,mBAAP;AAA4BJ,EAAAA;AAA5B,CAA3B,CAAtB;AAEP,OAAO,MAAMM,kBAAkB,GAAIC,KAAD,IAAmB;AACjD,SAAQC,QAAD,IAAwB;AAC3BA,IAAAA,QAAQ,CAACX,WAAW,CAAC,IAAD,CAAZ,CAAR;AACAC,IAAAA,UAAU,CAACW,OAAX,CAAmBF,KAAnB,EACKG,IADL,CACU,MAAM;AACRF,MAAAA,QAAQ,CAACH,aAAa,CAAC,IAAD,CAAd,CAAR;AACAG,MAAAA,QAAQ,CAACX,WAAW,CAAC,KAAD,CAAZ,CAAR;AACH,KAJL,EAKKc,KALL,CAKWC,GAAG,IAAI;AACV,UAAG,CAACA,GAAG,CAACC,KAAR,EAAc;AACVL,QAAAA,QAAQ,CAACZ,UAAU,CAAC,sCAAD,CAAX,CAAR;AACH,OAFD,MAEO;AACHY,QAAAA,QAAQ,CAACZ,UAAU,CAACgB,GAAG,CAACC,KAAL,CAAX,CAAR;AACH;;AACDL,MAAAA,QAAQ,CAACX,WAAW,CAAC,KAAD,CAAZ,CAAR;AACH,KAZL;AAaH,GAfD;AAgBH,CAjBM","sourcesContent":["import {Dispatch} from \"redux\";\nimport {setErrorAC, setStatusAC} from './app-reducer';\nimport {RestoreAPI} from '../dal/api';\n\n\ntype InitialStateType = {\n    emailIsSent: boolean\n}\n\nconst initialState = {\n    emailIsSent: false\n}\n\nexport const passwordRecoveryReducer = (state: InitialStateType = initialState, action: ActionsType) => {\n    switch (action.type) {\n        case 'APP/EMAIL-IS-SENT':\n            return {\n                ...state,\n                emailIsSent: action.emailIsSent\n            }\n        default:\n            return state\n    }\n}\n\nexport const emailIsSentAC = (emailIsSent: boolean) => ({type: 'APP/EMAIL-IS-SENT', emailIsSent})\n\nexport const passwordRecoveryTC = (email: string) => {\n    return (dispatch: Dispatch) => {\n        dispatch(setStatusAC(true))\n        RestoreAPI.restore(email)\n            .then(() => {\n                dispatch(emailIsSentAC(true))\n                dispatch(setStatusAC(false))\n            })\n            .catch(res => {\n                if(!res.error){\n                    dispatch(setErrorAC('Some Error! More details in console.'))\n                } else {\n                    dispatch(setErrorAC(res.error))\n                }\n                dispatch(setStatusAC(false))\n            })\n    }\n}\n\ntype ActionsType = ReturnType<typeof emailIsSentAC>"]},"metadata":{},"sourceType":"module"}