{"ast":null,"code":"var _jsxFileName = \"/Users/elizavetaspivak/Documents/study/React/project-friday-team/src/PasswordRecovery/PasswordRecovery.tsx\",\n    _s = $RefreshSig$();\n\nimport s from './PasswordRecovery.module.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport { TextField } from \"@material-ui/core\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport React from \"react\";\nimport { passwordRecoveryTC } from \"../state/password-reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PasswordRecovery() {\n  _s();\n\n  const dispatch = useDispatch();\n  const emailIsSent = useSelector(state => state.passwordRecovery.emailIsSent);\n  const formik = useFormik({\n    initialValues: {\n      email: \"\"\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.email) {\n        errors.email = \"Required\";\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = \"Invalid email address\";\n      }\n\n      return errors;\n    },\n    onSubmit: values => {\n      dispatch(passwordRecoveryTC(values.email));\n      formik.resetForm();\n    }\n  });\n\n  if (emailIsSent) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/recoveryconfirmation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.recovery,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.recoveryBlock,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"It-incubator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Forgot password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          className: s.form,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            type: \"email\",\n            placeholder: 'Email',\n            helperText: 'Enter your email address to receive password recovery instructions ',\n            ...formik.getFieldProps(\"email\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"red\"\n            },\n            children: formik.errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.buttonBlock,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: s.recoveryButton,\n              children: \"Get Instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.navlinkBlock,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Still remember your good old password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            className: s.navlink,\n            to: \"/login\",\n            children: \"Try logging in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PasswordRecovery, \"EdLGouX7MCH8AryrJqmeDFOfaPc=\", false, function () {\n  return [useDispatch, useSelector, useFormik];\n});\n\n_c = PasswordRecovery;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordRecovery\");","map":{"version":3,"sources":["/Users/elizavetaspivak/Documents/study/React/project-friday-team/src/PasswordRecovery/PasswordRecovery.tsx"],"names":["s","useDispatch","useSelector","useFormik","FormGroup","TextField","NavLink","Redirect","React","passwordRecoveryTC","PasswordRecovery","dispatch","emailIsSent","state","passwordRecovery","formik","initialValues","email","validate","values","errors","test","onSubmit","resetForm","recovery","recoveryBlock","handleSubmit","form","getFieldProps","touched","color","buttonBlock","recoveryButton","navlinkBlock","navlink"],"mappings":"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","sourcesContent":["import s from './PasswordRecovery.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useFormik} from \"formik\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport {TextField} from \"@material-ui/core\";\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport React, {useEffect} from \"react\";\nimport {passwordRecoveryTC} from \"../state/password-reducer\";\nimport {AppRootStateType} from \"../state/store\";\n\ntype FormikErrorType = {\n    email?: string;\n};\n\nexport function PasswordRecovery() {\n    const dispatch = useDispatch();\n\n    const emailIsSent = useSelector<AppRootStateType, boolean>((state) => state.passwordRecovery.emailIsSent);\n\n\n\n\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n        },\n        validate: (values) => {\n            const errors: FormikErrorType = {};\n            if (!values.email) {\n                errors.email = \"Required\";\n            } else if (\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n            ) {\n                errors.email = \"Invalid email address\";\n            }\n            return errors;\n        },\n        onSubmit: (values) => {\n            dispatch(passwordRecoveryTC(values.email));\n            formik.resetForm();\n        }\n    })\n\n    if (emailIsSent) {\n        return <Redirect to={\"/recoveryconfirmation\"}/>;\n    }\n\n    return (\n        <div className={s.recovery}>\n            <div className={s.recoveryBlock}>\n                <h1>It-incubator</h1>\n                <h2>Forgot password</h2>\n                <form onSubmit={formik.handleSubmit}>\n                    <FormGroup className={s.form}>\n                        <TextField type=\"email\" placeholder={'Email'}\n                                   helperText={'Enter your email address to receive password recovery instructions '}\n                                   {...formik.getFieldProps(\"email\")} />\n                        {formik.touched.email && formik.errors.email ? (\n                            <div style={{color: \"red\"}}>{formik.errors.email}</div>\n                        ) : null}\n                        <div className={s.buttonBlock}>\n                            <button className={s.recoveryButton}>Get Instructions</button>\n                        </div>\n                    </FormGroup>\n                    <div className={s.navlinkBlock}>\n                        <div>Still remember your good old password?</div>\n                        <NavLink className={s.navlink} to={\"/login\"}>Try logging in</NavLink>\n                    </div>\n                </form>\n            </div>\n        </div>\n\n    )\n\n}"]},"metadata":{},"sourceType":"module"}