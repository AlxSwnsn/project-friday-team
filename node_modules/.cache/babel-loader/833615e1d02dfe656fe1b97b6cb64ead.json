{"ast":null,"code":"import { AuthAPI } from '../dal/api';\nconst initialState = {\n  status: false,\n  error: null\n};\nexport const registerReducer = (state = initialState, action) => {\n  let copyState = { ...state\n  };\n\n  switch (action.type) {\n    case 'CREATE-USER-DATA':\n      if (action.error) {\n        return { ...state,\n          error: action.error\n        };\n      } else {\n        return copyState;\n      }\n\n    default:\n      return state;\n  }\n};\nexport const setStatusAC = status => ({\n  type: 'APP/SET-STATUS',\n  status\n});\n\nconst createUserData = error => ({\n  type: 'CREATE-USER-DATA',\n  error\n});\n\nexport const CreateUserThunk = (email, password) => {\n  return dispatch => {\n    dispatch();\n    AuthAPI.createUser(email, password).then(res => {}).catch(res => {\n      const error = res.error;\n      dispatch(createUserData(error));\n    });\n  };\n};\n_c = CreateUserThunk;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateUserThunk\");","map":{"version":3,"sources":["/Users/elizavetaspivak/Documents/study/React/project-friday-team/src/state/register-reducer.ts"],"names":["AuthAPI","initialState","status","error","registerReducer","state","action","copyState","type","setStatusAC","createUserData","CreateUserThunk","email","password","dispatch","createUser","then","res","catch"],"mappings":"AACA,SAAQA,OAAR,QAAsB,YAAtB;AAaA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,KADS;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB;AAKA,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAuB,GAAGJ,YAA3B,EAAyCK,MAAzC,KAA2F;AACtH,MAAIC,SAAS,GAAG,EAAC,GAAGF;AAAJ,GAAhB;;AACA,UAAQC,MAAM,CAACE,IAAf;AACI,SAAK,kBAAL;AACI,UAAIF,MAAM,CAACH,KAAX,EAAkB;AACd,eAAO,EACH,GAAGE,KADA;AAEHF,UAAAA,KAAK,EAAEG,MAAM,CAACH;AAFX,SAAP;AAIH,OALD,MAKO;AACH,eAAOI,SAAP;AACH;;AACL;AACI,aAAOF,KAAP;AAXR;AAaH,CAfM;AAiBP,OAAO,MAAMI,WAAW,GAAIP,MAAD,KAAgC;AAACM,EAAAA,IAAI,EAAE,gBAAP;AAAyBN,EAAAA;AAAzB,CAAhC,CAApB;;AACP,MAAMQ,cAAc,GAAIP,KAAD,KAA0C;AAACK,EAAAA,IAAI,EAAE,kBAAP;AAA2BL,EAAAA;AAA3B,CAA1C,CAAvB;;AAEA,OAAO,MAAMQ,eAAe,GAAG,CAACC,KAAD,EAAgBC,QAAhB,KAAqC;AAChE,SAAQC,QAAD,IAAwB;AAC3BA,IAAAA,QAAQ;AACRd,IAAAA,OAAO,CAACe,UAAR,CAAmBH,KAAnB,EAA0BC,QAA1B,EACKG,IADL,CACWC,GAAD,IAAS,CAEd,CAHL,EAIKC,KAJL,CAIYD,GAAD,IAAS;AACZ,YAAMd,KAAK,GAAGc,GAAG,CAACd,KAAlB;AACAW,MAAAA,QAAQ,CAACJ,cAAc,CAACP,KAAD,CAAf,CAAR;AACH,KAPL;AAQH,GAVD;AAWH,CAZM;KAAMQ,e","sourcesContent":["import {Dispatch} from 'redux'\nimport {AuthAPI} from '../dal/api';\n\n\ntype createUserDataACType = {\n    type: 'CREATE-USER-DATA'\n    error?: string\n}\n\ntype initialStateType = {\n    status: boolean\n    error?: string | null\n}\n\nconst initialState = {\n    status: false,\n    error: null\n}\n\nexport const registerReducer = (state: initialStateType = initialState, action: createUserDataACType):initialStateType => {\n    let copyState = {...state}\n    switch (action.type) {\n        case 'CREATE-USER-DATA':\n            if (action.error) {\n                return {\n                    ...state,\n                    error: action.error\n                }\n            } else {\n                return copyState\n            }\n        default:\n            return state\n    }\n}\n\nexport const setStatusAC = (status: RequestStatusType) => ({type: 'APP/SET-STATUS', status} as const)\nconst createUserData = (error: string): createUserDataACType => ({type: 'CREATE-USER-DATA', error})\n\nexport const CreateUserThunk = (email: string, password: string) => {\n    return (dispatch: Dispatch) => {\n        dispatch()\n        AuthAPI.createUser(email, password)\n            .then((res) => {\n\n            })\n            .catch((res) => {\n                const error = res.error\n                dispatch(createUserData(error))\n            })\n    }\n}"]},"metadata":{},"sourceType":"module"}