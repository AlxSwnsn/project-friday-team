{"ast":null,"code":"var _jsxFileName = \"/Users/elizavetaspivak/Documents/study/React/project-friday-team/src/Register/Register.tsx\";\nimport { Formik } from 'formik';\nimport s from './Register.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Register() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.register,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            email: '',\n            password: ''\n          },\n          validate: values => {\n            const errors = {\n              email: ''\n            };\n\n            if (!values.email) {\n              errors.email = 'Required';\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n              errors.email = 'Invalid email address';\n            }\n\n            return errors;\n          },\n          onSubmit: async (values, {\n            setSubmitting\n          }) => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          },\n          children: ({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting\n          }) => /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this), errors.email && touched.email && errors.email, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this), errors.password && touched.password && errors.password, /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: isSubmitting,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/elizavetaspivak/Documents/study/React/project-friday-team/src/Register/Register.tsx"],"names":["Formik","s","Register","register","email","password","values","errors","test","setSubmitting","alert","JSON","stringify","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":";AAAA,SAAQA,MAAR,QAAqB,QAArB;AACA,OAAOC,CAAP,MAAc,uBAAd;;AAEA,OAAO,SAASC,QAAT,GAAoB;AAGvB,sBACI;AAAK,IAAA,SAAS,EAAED,CAAC,CAACE,QAAlB;AAAA,2BACI;AAAA,6BACI;AAAA,+BACI,QAAC,MAAD;AACI,UAAA,aAAa,EAAE;AAACC,YAAAA,KAAK,EAAE,EAAR;AAAYC,YAAAA,QAAQ,EAAE;AAAtB,WADnB;AAEI,UAAA,QAAQ,EAAEC,MAAM,IAAI;AAChB,kBAAMC,MAAM,GAAG;AAACH,cAAAA,KAAK,EAAE;AAAR,aAAf;;AACA,gBAAI,CAACE,MAAM,CAACF,KAAZ,EAAmB;AACfG,cAAAA,MAAM,CAACH,KAAP,GAAe,UAAf;AACH,aAFD,MAEO,IACH,CAAC,2CAA2CI,IAA3C,CAAgDF,MAAM,CAACF,KAAvD,CADE,EAEL;AACEG,cAAAA,MAAM,CAACH,KAAP,GAAe,uBAAf;AACH;;AACD,mBAAOG,MAAP;AACH,WAZL;AAaI,UAAA,QAAQ,EAAE,OAAOD,MAAP,EAAe;AAACG,YAAAA;AAAD,WAAf,KAAmC;AACrCC,YAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeN,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAG,YAAAA,aAAa,CAAC,KAAD,CAAb;AACP,WAhBL;AAAA,oBAkBK,CAAC;AACIH,YAAAA,MADJ;AAEIC,YAAAA,MAFJ;AAGIM,YAAAA,OAHJ;AAIIC,YAAAA,YAJJ;AAKIC,YAAAA,UALJ;AAMIC,YAAAA,YANJ;AAOIC,YAAAA;AAPJ,WAAD,kBASG;AAAM,YAAA,QAAQ,EAAED,YAAhB;AAAA,oCACI;AACI,cAAA,IAAI,EAAC,OADT;AAEI,cAAA,IAAI,EAAC,OAFT;AAGI,cAAA,QAAQ,EAAEF,YAHd;AAII,cAAA,MAAM,EAAEC,UAJZ;AAKI,cAAA,KAAK,EAAET,MAAM,CAACF;AALlB;AAAA;AAAA;AAAA;AAAA,oBADJ,EAQKG,MAAM,CAACH,KAAP,IAAgBS,OAAO,CAACT,KAAxB,IAAiCG,MAAM,CAACH,KAR7C,eASI;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,IAAI,EAAC,UAFT;AAGI,cAAA,QAAQ,EAAEU,YAHd;AAII,cAAA,MAAM,EAAEC,UAJZ;AAKI,cAAA,KAAK,EAAET,MAAM,CAACD;AALlB;AAAA;AAAA;AAAA;AAAA,oBATJ,EAgBKE,MAAM,CAACF,QAAP,IAAmBQ,OAAO,CAACR,QAA3B,IAAuCE,MAAM,CAACF,QAhBnD,eAiBI;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,QAAQ,EAAEY,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AA3BR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0DH;KA7Def,Q","sourcesContent":["import {Formik} from 'formik';\nimport s from './Register.module.css'\n\nexport function Register() {\n\n\n    return (\n        <div className={s.register}>\n            <div>\n                <div>\n                    <Formik\n                        initialValues={{email: '', password: ''}}\n                        validate={values => {\n                            const errors = {email: ''};\n                            if (!values.email) {\n                                errors.email = 'Required';\n                            } else if (\n                                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                            ) {\n                                errors.email = 'Invalid email address';\n                            }\n                            return errors;\n                        }}\n                        onSubmit={async (values, {setSubmitting}) => {\n                                alert(JSON.stringify(values, null, 2));\n                                setSubmitting(false);\n                        }}\n                    >\n                        {({\n                              values,\n                              errors,\n                              touched,\n                              handleChange,\n                              handleBlur,\n                              handleSubmit,\n                              isSubmitting\n                          }) => (\n                            <form onSubmit={handleSubmit}>\n                                <input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.email}\n                                />\n                                {errors.email && touched.email && errors.email}\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.password}\n                                />\n                                {errors.password && touched.password && errors.password}\n                                <button type=\"submit\" disabled={isSubmitting}>\n                                    Submit\n                                </button>\n                            </form>\n                        )}\n                    </Formik>\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}