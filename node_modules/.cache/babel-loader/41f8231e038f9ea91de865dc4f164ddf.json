{"ast":null,"code":"import _objectSpread from\"/Users/elizavetaspivak/Documents/study/React/project-friday-team/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import s from'./CreateNewPassword.module.css';import{useDispatch,useSelector}from\"react-redux\";import{useFormik}from\"formik\";import FormGroup from\"@material-ui/core/FormGroup\";import{TextField}from\"@material-ui/core\";import React from\"react\";import{Redirect,useParams}from\"react-router-dom\";import{createNewPasswordTC}from\"../state/newPassword-reducer\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function CreateNewPassword(){var dispatch=useDispatch();var _useParams=useParams(),token=_useParams.token;var passwordSent=useSelector(function(state){return state.newPassword.passwordSent;});var formik=useFormik({initialValues:{password:\"\"},validate:function validate(values){var errors={};if(!values.password){errors.password=\"Required\";}else if(!/^[A-Z0-9._%+-]/i.test(values.password)){errors.password=\"Not acceptable\";}return errors;},onSubmit:function onSubmit(values){dispatch(createNewPasswordTC(values.password,token));formik.resetForm();}});if(passwordSent){return/*#__PURE__*/_jsx(Redirect,{to:\"/login\"});}return/*#__PURE__*/_jsx(\"div\",{className:s.newPassword,children:/*#__PURE__*/_jsxs(\"div\",{className:s.newPasswordBlock,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"It-incubator\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Create new password\"}),/*#__PURE__*/_jsx(\"form\",{onSubmit:formik.handleSubmit,children:/*#__PURE__*/_jsxs(FormGroup,{className:s.form,children:[/*#__PURE__*/_jsx(TextField,_objectSpread({type:\"password\",placeholder:'Password',helperText:\"Enter the new password and we we'll send you further instructions\"},formik.getFieldProps(\"password\"))),formik.touched.password&&formik.errors.password?/*#__PURE__*/_jsx(\"div\",{style:{color:\"red\"},children:formik.errors.password}):null,/*#__PURE__*/_jsx(\"div\",{className:s.buttonBlock,children:/*#__PURE__*/_jsx(\"button\",{className:s.createButton,children:\"Create new password\"})})]})})]})});}","map":{"version":3,"sources":["/Users/elizavetaspivak/Documents/study/React/project-friday-team/src/TypeNewPassword/CreateNewPassword.tsx"],"names":["s","useDispatch","useSelector","useFormik","FormGroup","TextField","React","Redirect","useParams","createNewPasswordTC","CreateNewPassword","dispatch","token","passwordSent","state","newPassword","formik","initialValues","password","validate","values","errors","test","onSubmit","resetForm","newPasswordBlock","handleSubmit","form","getFieldProps","touched","color","buttonBlock","createButton"],"mappings":"sLAAA,MAAOA,CAAAA,CAAP,KAAc,gCAAd,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,aAAvC,CACA,OAAQC,SAAR,KAAwB,QAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,OAAQC,SAAR,KAAwB,mBAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAAQC,QAAR,CAAkBC,SAAlB,KAAkC,kBAAlC,CACA,OAAQC,mBAAR,KAAkC,8BAAlC,C,wFAMA,MAAO,SAASC,CAAAA,iBAAT,EAA6B,CAChC,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CADgC,eAEZO,SAAS,EAFG,CAEzBI,KAFyB,YAEzBA,KAFyB,CAIhC,GAAMC,CAAAA,YAAY,CAAGX,WAAW,CAA4B,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACC,WAAN,CAAkBF,YAA7B,EAA5B,CAAhC,CAGA,GAAMG,CAAAA,MAAM,CAAGb,SAAS,CAAC,CACrBc,aAAa,CAAE,CACXC,QAAQ,CAAE,EADC,CADM,CAIrBC,QAAQ,CAAE,kBAACC,MAAD,CAAY,CAClB,GAAMC,CAAAA,MAAuB,CAAG,EAAhC,CACA,GAAI,CAACD,MAAM,CAACF,QAAZ,CAAsB,CAClBG,MAAM,CAACH,QAAP,CAAkB,UAAlB,CACH,CAFD,IAEO,IACH,CAAC,kBAAkBI,IAAlB,CAAuBF,MAAM,CAACF,QAA9B,CADE,CAEL,CACEG,MAAM,CAACH,QAAP,CAAkB,gBAAlB,CACH,CACD,MAAOG,CAAAA,MAAP,CACH,CAdoB,CAerBE,QAAQ,CAAE,kBAACH,MAAD,CAAY,CAClBT,QAAQ,CAACF,mBAAmB,CAACW,MAAM,CAACF,QAAR,CAAkBN,KAAlB,CAApB,CAAR,CACAI,MAAM,CAACQ,SAAP,GACH,CAlBoB,CAAD,CAAxB,CAqBA,GAAIX,YAAJ,CAAkB,CACd,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAE,QAAd,EAAP,CAEH,CAED,mBACI,YAAK,SAAS,CAAEb,CAAC,CAACe,WAAlB,uBACI,aAAK,SAAS,CAAEf,CAAC,CAACyB,gBAAlB,wBACI,oCADJ,cAEI,2CAFJ,cAGI,aAAM,QAAQ,CAAET,MAAM,CAACU,YAAvB,uBACI,MAAC,SAAD,EAAW,SAAS,CAAE1B,CAAC,CAAC2B,IAAxB,wBACI,KAAC,SAAD,gBAAW,IAAI,CAAC,UAAhB,CAA2B,WAAW,CAAE,UAAxC,CACW,UAAU,CAAE,mEADvB,EAEeX,MAAM,CAACY,aAAP,CAAqB,UAArB,CAFf,EADJ,CAIKZ,MAAM,CAACa,OAAP,CAAeX,QAAf,EAA2BF,MAAM,CAACK,MAAP,CAAcH,QAAzC,cACG,YAAK,KAAK,CAAE,CAACY,KAAK,CAAE,KAAR,CAAZ,UAA6Bd,MAAM,CAACK,MAAP,CAAcH,QAA3C,EADH,CAEG,IANR,cAOI,YAAK,SAAS,CAAElB,CAAC,CAAC+B,WAAlB,uBACI,eAAQ,SAAS,CAAE/B,CAAC,CAACgC,YAArB,iCADJ,EAPJ,GADJ,EAHJ,GADJ,EADJ,CAuBH","sourcesContent":["import s from './CreateNewPassword.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useFormik} from \"formik\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport {TextField} from \"@material-ui/core\";\nimport React from \"react\";\nimport {AppRootStateType} from \"../state/store\";\nimport {Redirect, useParams} from \"react-router-dom\";\nimport {createNewPasswordTC} from \"../state/newPassword-reducer\";\n\ntype FormikErrorType = {\n    password?: string;\n};\n\nexport function CreateNewPassword() {\n    const dispatch = useDispatch();\n    const {token}:any = useParams()\n\n    const passwordSent = useSelector<AppRootStateType, boolean>((state) => state.newPassword.passwordSent);\n\n\n    const formik = useFormik({\n        initialValues: {\n            password: \"\",\n        },\n        validate: (values) => {\n            const errors: FormikErrorType = {};\n            if (!values.password) {\n                errors.password = \"Required\";\n            } else if (\n                !/^[A-Z0-9._%+-]/i.test(values.password)\n            ) {\n                errors.password = \"Not acceptable\";\n            }\n            return errors;\n        },\n        onSubmit: (values) => {\n            dispatch(createNewPasswordTC(values.password, token));\n            formik.resetForm();\n        }\n    })\n\n    if (passwordSent) {\n        return <Redirect to={\"/login\"}/>;\n\n    }\n\n    return (\n        <div className={s.newPassword}>\n            <div className={s.newPasswordBlock}>\n                <h1>It-incubator</h1>\n                <h2>Create new password</h2>\n                <form onSubmit={formik.handleSubmit}>\n                    <FormGroup className={s.form}>\n                        <TextField type=\"password\" placeholder={'Password'}\n                                   helperText={\"Enter the new password and we we'll send you further instructions\"}\n                                   {...formik.getFieldProps(\"password\")} />\n                        {formik.touched.password && formik.errors.password ? (\n                            <div style={{color: \"red\"}}>{formik.errors.password}</div>\n                        ) : null}\n                        <div className={s.buttonBlock}>\n                            <button className={s.createButton}>Create new password</button>\n                        </div>\n                    </FormGroup>\n                </form>\n            </div>\n        </div>\n\n    )\n\n}"]},"metadata":{},"sourceType":"module"}