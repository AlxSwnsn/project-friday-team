{"ast":null,"code":"import { AuthAPI } from '../dal/api';\nconst initialState = {\n  isRegister: false,\n  status: false,\n  error: undefined\n};\nexport const registerReducer = (state = initialState, action) => {\n  let copyState = { ...state\n  };\n\n  switch (action.type) {\n    case 'APP/SET-ERROR':\n      if (action.error) {\n        return { ...state,\n          error: action.error\n        };\n      } else {\n        return copyState;\n      }\n\n    case 'APP/SET-STATUS':\n      return { ...state,\n        status: action.status\n      };\n\n    case 'APP/SET-REGISTER-STATUS':\n      return { ...state,\n        isRegister: action.isRegister\n      };\n\n    default:\n      return state;\n  }\n};\nexport const setStatusAC = status => ({\n  type: 'APP/SET-STATUS',\n  status\n});\nexport const setErrorAC = error => ({\n  type: 'APP/SET-ERROR',\n  error\n});\nexport const setRegisterStatus = isRegister => ({\n  type: 'APP/SET-REGISTER-STATUS',\n  isRegister\n});\nexport const CreateUserThunk = (email, password) => {\n  return dispatch => {\n    dispatch(setStatusAC(true));\n    AuthAPI.createUser(email, password).then(res => {\n      dispatch(setStatusAC(false));\n      dispatch(setRegisterStatus(true));\n    }).catch(res => {\n      const error = res.error;\n      dispatch(setErrorAC(error));\n      dispatch(setStatusAC(false));\n    });\n  };\n};\n_c = CreateUserThunk;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateUserThunk\");","map":{"version":3,"sources":["/Users/elizavetaspivak/Documents/study/React/project-friday-team/src/state/register-reducer.ts"],"names":["AuthAPI","initialState","isRegister","status","error","undefined","registerReducer","state","action","copyState","type","setStatusAC","setErrorAC","setRegisterStatus","CreateUserThunk","email","password","dispatch","createUser","then","res","catch"],"mappings":"AACA,SAAQA,OAAR,QAAsB,YAAtB;AAwBA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,KADK;AAEjBC,EAAAA,MAAM,EAAE,KAFS;AAGjBC,EAAAA,KAAK,EAAEC;AAHU,CAArB;AAQA,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAuB,GAAGN,YAA3B,EAAyCO,MAAzC,KAAmF;AAC9G,MAAIC,SAAS,GAAG,EAAC,GAAGF;AAAJ,GAAhB;;AACA,UAAQC,MAAM,CAACE,IAAf;AACI,SAAK,eAAL;AACI,UAAIF,MAAM,CAACJ,KAAX,EAAkB;AACd,eAAO,EACH,GAAGG,KADA;AAEHH,UAAAA,KAAK,EAAEI,MAAM,CAACJ;AAFX,SAAP;AAIH,OALD,MAKO;AACH,eAAOK,SAAP;AACH;;AACL,SAAK,gBAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHJ,QAAAA,MAAM,EAAEK,MAAM,CAACL;AAFZ,OAAP;;AAIJ,SAAK,yBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHL,QAAAA,UAAU,EAAEM,MAAM,CAACN;AAFhB,OAAP;;AAIJ;AACI,aAAOK,KAAP;AArBR;AAuBH,CAzBM;AA2BP,OAAO,MAAMI,WAAW,GAAIR,MAAD,KAAsB;AAACO,EAAAA,IAAI,EAAE,gBAAP;AAAyBP,EAAAA;AAAzB,CAAtB,CAApB;AACP,OAAO,MAAMS,UAAU,GAAIR,KAAD,KAA2B;AAACM,EAAAA,IAAI,EAAE,eAAP;AAAwBN,EAAAA;AAAxB,CAA3B,CAAnB;AACP,OAAO,MAAMS,iBAAiB,GAAIX,UAAD,KAA0B;AAACQ,EAAAA,IAAI,EAAE,yBAAP;AAAkCR,EAAAA;AAAlC,CAA1B,CAA1B;AAEP,OAAO,MAAMY,eAAe,GAAG,CAACC,KAAD,EAAgBC,QAAhB,KAAqC;AAChE,SAAQC,QAAD,IAAwB;AAC3BA,IAAAA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR;AACAX,IAAAA,OAAO,CAACkB,UAAR,CAAmBH,KAAnB,EAA0BC,QAA1B,EACKG,IADL,CACWC,GAAD,IAAS;AACXH,MAAAA,QAAQ,CAACN,WAAW,CAAC,KAAD,CAAZ,CAAR;AACAM,MAAAA,QAAQ,CAACJ,iBAAiB,CAAC,IAAD,CAAlB,CAAR;AACH,KAJL,EAKKQ,KALL,CAKYD,GAAD,IAAS;AACZ,YAAMhB,KAAK,GAAGgB,GAAG,CAAChB,KAAlB;AACAa,MAAAA,QAAQ,CAACL,UAAU,CAACR,KAAD,CAAX,CAAR;AACAa,MAAAA,QAAQ,CAACN,WAAW,CAAC,KAAD,CAAZ,CAAR;AACH,KATL;AAUH,GAZD;AAaH,CAdM;KAAMG,e","sourcesContent":["import {Dispatch} from 'redux'\nimport {AuthAPI} from '../dal/api';\n\n\ntype setErrorACType = {\n    type: 'APP/SET-ERROR'\n    error?: string\n}\n\ntype setStatusACType = {\n    type: 'APP/SET-STATUS'\n    status: boolean\n}\n\ntype setRegisterStatusACType = {\n    type: 'APP/SET-REGISTER-STATUS'\n    isRegister: boolean\n}\n\ntype initialStateType = {\n    isRegister: boolean\n    status: boolean\n    error?: string | undefined\n}\n\nconst initialState = {\n    isRegister: false,\n    status: false,\n    error: undefined\n}\n\ntype ActionsType = setErrorACType | setStatusACType | setRegisterStatusACType\n\nexport const registerReducer = (state: initialStateType = initialState, action: ActionsType): initialStateType => {\n    let copyState = {...state}\n    switch (action.type) {\n        case 'APP/SET-ERROR':\n            if (action.error) {\n                return {\n                    ...state,\n                    error: action.error\n                }\n            } else {\n                return copyState\n            }\n        case 'APP/SET-STATUS':\n            return {\n                ...state,\n                status: action.status\n            }\n        case 'APP/SET-REGISTER-STATUS':\n            return {\n                ...state,\n                isRegister: action.isRegister\n            }\n        default:\n            return state\n    }\n}\n\nexport const setStatusAC = (status: boolean) => ({type: 'APP/SET-STATUS', status} as const)\nexport const setErrorAC = (error: string | null) => ({type: 'APP/SET-ERROR', error} as const)\nexport const setRegisterStatus = (isRegister: boolean) => ({type: 'APP/SET-REGISTER-STATUS', isRegister} as const)\n\nexport const CreateUserThunk = (email: string, password: string) => {\n    return (dispatch: Dispatch) => {\n        dispatch(setStatusAC(true))\n        AuthAPI.createUser(email, password)\n            .then((res) => {\n                dispatch(setStatusAC(false))\n                dispatch(setRegisterStatus(true))\n            })\n            .catch((res) => {\n                const error = res.error\n                dispatch(setErrorAC(error))\n                dispatch(setStatusAC(false))\n            })\n    }\n}"]},"metadata":{},"sourceType":"module"}