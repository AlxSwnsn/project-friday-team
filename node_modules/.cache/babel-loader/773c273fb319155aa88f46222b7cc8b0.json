{"ast":null,"code":"import s from'./Register.module.css';import{Formik}from'formik';import{CreateUserThunk}from'../state/register-reducer';import{useDispatch,useSelector}from'react-redux';import{TextField}from'@material-ui/core';import{Redirect}from'react-router-dom';import React from'react';import{ErrorSnackbar}from'../Snackbar/ErrorSnackBar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Register=function Register(){var dispatch=useDispatch();var isRegister=useSelector(function(state){return state.register.isRegister;});if(isRegister){return/*#__PURE__*/_jsx(Redirect,{to:\"/login\"});}return/*#__PURE__*/_jsxs(\"div\",{className:s.register,children:[/*#__PURE__*/_jsxs(\"div\",{className:s.registerBlock,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"It-incubator\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Sign Up\"}),/*#__PURE__*/_jsx(\"div\",{className:s.form,children:/*#__PURE__*/_jsx(Formik,{initialValues:{email:'',password:'',confirmPassword:''},validate:function validate(values){var errors={};if(!values.email){errors.email='Required';}else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)){errors.email='Invalid email address';}if(!values.password){errors.password='Required';}else if(values.password.length<7){errors.password='Password too short';}if(!values.confirmPassword){errors.confirmPassword='Required';}else if(values.password!=values.confirmPassword){errors.password=\"Password don't match\";}return errors;},onSubmit:function onSubmit(values,_ref){var setSubmitting=_ref.setSubmitting;dispatch(CreateUserThunk(values.email,values.password));setSubmitting(false);},children:function children(_ref2){var values=_ref2.values,errors=_ref2.errors,touched=_ref2.touched,handleChange=_ref2.handleChange,handleBlur=_ref2.handleBlur,handleSubmit=_ref2.handleSubmit,isSubmitting=_ref2.isSubmitting;return/*#__PURE__*/_jsx(\"div\",{className:s.formInput,children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(TextField,{type:\"email\",name:\"email\",required:true,id:\"standard-required\",onChange:handleChange,onBlur:handleBlur,value:values.email,placeholder:'Email',helperText:errors.email&&touched.email?errors.email:'Enter email-id'}),/*#__PURE__*/_jsx(TextField,{id:\"password\",type:\"password\",name:\"password\",onChange:handleChange,onBlur:handleBlur,value:values.password,helperText:errors.password&&touched.password?errors.password:'Enter password',placeholder:'Password'}),/*#__PURE__*/_jsx(TextField,{id:\"confirmPassword\",type:\"password\",name:\"confirmPassword\",onChange:handleChange,onBlur:handleBlur,value:values.confirmPassword,placeholder:'Confirm Password',helperText:errors.confirmPassword&&touched.confirmPassword?errors.confirmPassword:'Enter the password again'}),/*#__PURE__*/_jsxs(\"div\",{className:s.buttonBlock,children:[/*#__PURE__*/_jsx(\"button\",{className:s.cancelButton,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:s.registerButton,type:\"submit\",disabled:isSubmitting,children:\"Register\"})]})]})});}})})]}),/*#__PURE__*/_jsx(ErrorSnackbar,{})]});};","map":{"version":3,"sources":["/Users/elizavetaspivak/Documents/study/React/project-friday-team/src/Register/Register.tsx"],"names":["s","Formik","CreateUserThunk","useDispatch","useSelector","TextField","Redirect","React","ErrorSnackbar","Register","dispatch","isRegister","state","register","registerBlock","form","email","password","confirmPassword","values","errors","test","length","setSubmitting","touched","handleChange","handleBlur","handleSubmit","isSubmitting","formInput","buttonBlock","cancelButton","registerButton"],"mappings":"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","sourcesContent":["import s from './Register.module.css'\nimport {Formik} from 'formik';\nimport {CreateUserThunk} from '../state/register-reducer';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {TextField} from '@material-ui/core';\nimport {AppRootStateType} from '../state/store';\nimport { Redirect } from 'react-router-dom';\nimport React from 'react';\nimport {ErrorSnackbar} from '../Snackbar/ErrorSnackBar';\n\n\nexport const Register: React.FC = () => {\n    let dispatch = useDispatch()\n\n\n    let isRegister = useSelector<AppRootStateType, boolean>(state => state.register.isRegister)\n\n    if(isRegister){\n        return <Redirect to=\"/login\" />\n    }\n\n    return (\n        <div className={s.register}>\n            <div className={s.registerBlock}>\n                <h1>It-incubator</h1>\n                <h2>Sign Up</h2>\n                <div className={s.form}>\n                    <Formik\n                        initialValues={{email: '', password: '', confirmPassword: ''}}\n                        validate={values => {\n                            const errors:any = {};\n                            if (!values.email) {\n                                errors.email = 'Required';\n                            } else if (\n                                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                            ) {\n                                errors.email = 'Invalid email address';\n                            }\n                            if (!values.password) {\n                                errors.password = 'Required';\n                            } else if (values.password.length < 7) {\n                                errors.password = 'Password too short';\n                            }\n                            if (!values.confirmPassword) {\n                                errors.confirmPassword = 'Required';\n                            } else if (values.password != values.confirmPassword) {\n                                errors.password = `Password don't match`;\n                            }\n                            return errors;\n                        }}\n                        onSubmit={(values, {setSubmitting}) => {\n                            dispatch(CreateUserThunk(values.email, values.password))\n                            setSubmitting(false);\n                        }}\n                    >\n                        {({\n                              values,\n                              errors,\n                              touched,\n                              handleChange,\n                              handleBlur,\n                              handleSubmit,\n                              isSubmitting,\n                              /* and other goodies */\n                          }) => (<div className={s.formInput}>\n                                <form onSubmit={handleSubmit}>\n                                    <TextField type=\"email\"\n                                               name=\"email\"\n                                               required id=\"standard-required\"\n                                               onChange={handleChange}\n                                               onBlur={handleBlur}\n                                               value={values.email}\n                                               placeholder={'Email'}\n                                               helperText={\n                                                   errors.email && touched.email\n                                                       ? errors.email\n                                                       : 'Enter email-id'\n                                               }/>\n                                    <TextField id=\"password\"\n                                               type=\"password\"\n                                               name=\"password\"\n                                               onChange={handleChange}\n                                               onBlur={handleBlur}\n                                               value={values.password}\n                                               helperText={\n                                                   errors.password && touched.password\n                                                       ? errors.password\n                                                       : 'Enter password'\n                                               }\n                                               placeholder={'Password'}/>\n                                    <TextField id=\"confirmPassword\"\n                                               type=\"password\"\n                                               name=\"confirmPassword\"\n                                               onChange={handleChange}\n                                               onBlur={handleBlur}\n                                               value={values.confirmPassword}\n                                               placeholder={'Confirm Password'}\n                                               helperText={\n                                                   errors.confirmPassword && touched.confirmPassword\n                                                       ? errors.confirmPassword\n                                                       : 'Enter the password again'\n                                               }/>\n                                    <div className={s.buttonBlock}>\n                                        <button className={s.cancelButton}>\n                                            Cancel\n                                        </button>\n                                        <button className={s.registerButton} type=\"submit\" disabled={isSubmitting}>\n                                            Register\n                                        </button>\n                                    </div>\n                                </form>\n                            </div>\n                        )}\n                    </Formik>\n                </div>\n            </div>\n            <ErrorSnackbar/>\n        </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}