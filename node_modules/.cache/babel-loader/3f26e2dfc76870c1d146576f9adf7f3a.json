{"ast":null,"code":"import axios from\"axios\";var instance=axios.create({baseURL:\"https://neko-back.herokuapp.com/2.0/\",withCredentials:true});export var AuthAPI={createUser:function createUser(email,password){return instance.post(\"/auth/register\",{email:email,password:password});},login:function login(data){return instance.post(\"auth/login\",data);},logout:function logout(){return instance.delete(\"auth/me\");},me:function me(){return instance.post(\"auth/me\",{});}};export var RestoreAPI={restore:function restore(email){return instance.post('auth/forgot',{email:email,message:\"password recovery link: <a href='https://elizavetaspivak.github.io/project-friday-team#/newpassword/$token$'>link</a>\"});},create:function create(password,token){return instance.post('auth/set-new-password',{password:password,resetPasswordToken:token});}};","map":{"version":3,"sources":["/Users/elizavetaspivak/Documents/study/React/project-friday-team/src/dal/api.ts"],"names":["axios","instance","create","baseURL","withCredentials","AuthAPI","createUser","email","password","post","login","data","logout","delete","me","RestoreAPI","restore","message","token","resetPasswordToken"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CA0BA,GAAMC,CAAAA,QAAQ,CAAGD,KAAK,CAACE,MAAN,CAAa,CAC5BC,OAAO,CAAE,sCADmB,CAE5BC,eAAe,CAAE,IAFW,CAAb,CAAjB,CAeA,MAAO,IAAMC,CAAAA,OAAO,CAAG,CACrBC,UADqB,qBACVC,KADU,CACKC,QADL,CACuB,CAC1C,MAAOP,CAAAA,QAAQ,CAACQ,IAAT,CAA8B,gBAA9B,CAAgD,CAAEF,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAhD,CAAP,CACD,CAHoB,CAIrBE,KAJqB,gBAIfC,IAJe,CAIE,CACrB,MAAOV,CAAAA,QAAQ,CAACQ,IAAT,cAA+CE,IAA/C,CAAP,CACD,CANoB,CAOrBC,MAPqB,kBAOZ,CACP,MAAOX,CAAAA,QAAQ,CAACY,MAAT,WAAP,CACD,CAToB,CAUrBC,EAVqB,cAUhB,CACH,MAAOb,CAAAA,QAAQ,CAACQ,IAAT,WAA4C,EAA5C,CAAP,CAED,CAboB,CAAhB,CAgBP,MAAO,IAAMM,CAAAA,UAAU,CAAG,CACtBC,OADsB,kBACdT,KADc,CACC,CACnB,MAAON,CAAAA,QAAQ,CAACQ,IAAT,CAAmC,aAAnC,CACH,CACIF,KAAK,CAALA,KADJ,CAEIU,OAAO,CAAE,uHAFb,CADG,CAAP,CAKH,CAPqB,CAQtBf,MARsB,iBAQfM,QARe,CAQGU,KARH,CAQe,CACjC,MAAOjB,CAAAA,QAAQ,CAACQ,IAAT,CAAmC,uBAAnC,CAA4D,CAACD,QAAQ,CAARA,QAAD,CAAWW,kBAAkB,CAAED,KAA/B,CAA5D,CAAP,CACH,CAVqB,CAAnB","sourcesContent":["import axios from \"axios\";\n\nexport type LoginType = {\n  email: string;\n  password: string;\n  rememberMe: boolean;\n};\n\nexport type ResponseLoginType = {\n  _id: string;\n  email: string;\n  name: string;\n  avatar?: string;\n  publicCardPacksCount: number; // количество колод\n  created: Date;\n  updated: Date;\n  isAdmin: boolean;\n  verified: boolean; // подтвердил ли почту\n  rememberMe: boolean;\n  error?: string;\n};\nexport type DeleteLoginResponseType = {\n  info: string;\n  error: string;\n};\n\nconst instance = axios.create({\n  baseURL: \"https://neko-back.herokuapp.com/2.0/\",\n  withCredentials: true,\n});\n\nexport type CreateUserType = {\n  email: string;\n  password: string;\n};\n\nexport type RestoreResponseType = {\n    info: string\n    error: string\n}\n\nexport const AuthAPI = {\n  createUser(email: string, password: string) {\n    return instance.post<CreateUserType>(\"/auth/register\", { email, password });\n  },\n  login(data: LoginType) {\n    return instance.post<ResponseLoginType>(`auth/login`, data);\n  },\n  logout() {\n    return instance.delete<DeleteLoginResponseType>(`auth/me`);\n  },\n  me() {\n    return instance.post<ResponseLoginType>(`auth/me`, {});\n  \n  }\n}\n\nexport const RestoreAPI = {\n    restore(email: string) {\n        return instance.post<RestoreResponseType>('auth/forgot',\n            {\n                email,\n                message: \"password recovery link: <a href='https://elizavetaspivak.github.io/project-friday-team#/newpassword/$token$'>link</a>\"\n            },);\n    },\n    create(password: string, token: any) {\n        return instance.post<RestoreResponseType>('auth/set-new-password', {password, resetPasswordToken: token})\n    }\n}\n"]},"metadata":{},"sourceType":"module"}