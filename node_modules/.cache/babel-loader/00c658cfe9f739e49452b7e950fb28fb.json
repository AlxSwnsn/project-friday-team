{"ast":null,"code":"import { loginApi } from \"../Login/loginApi\";\nconst initialState = {\n  isLoggedIn: false,\n  user: {\n    _id: '',\n    email: '',\n    name: '',\n    publicCardPacksCount: 0,\n    // количество колод\t \n    created: Date,\n    updated: Date,\n    isAdmin: false,\n    verified: false,\n    // подтвердил ли почту\t\n    rememberMe: false\n  }\n};\nexport const loginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"LOGIN/SET-IS-LOGGED-IN\":\n      return { ...state,\n        isLoggedIn: action.value\n      };\n\n    case \"LOGIN/SET_USER_DATA\":\n      // debugger\n      return { ...state,\n        user: action.userData\n      };\n\n    default:\n      return state;\n  }\n}; // actions\n\nexport const setIsLoggedInAC = value => ({\n  type: \"LOGIN/SET-IS-LOGGED-IN\",\n  value\n});\nexport const setUserDataAC = userData => {\n  //  debugger\n  return {\n    type: \"LOGIN/SET_USER_DATA\",\n    userData\n  };\n}; // thunks\n\nexport const loginTC = data => dispatch => {\n  loginApi.login(data).then(res => {\n    dispatch(setIsLoggedInAC(true));\n  }).catch();\n};\nexport const logoutTC = () => dispatch => {\n  loginApi.logout().then(res => {\n    dispatch(setIsLoggedInAC(false));\n  }).catch();\n}; // export const getUserDataTC =\n//   (data: ResponseLoginType) => (dispatch: Dispatch<ActionsType>) => {\n//     debugger\n//     dispatch(setUserDataAC(data));\n//     dispatch(setIsLoggedInAC(true));\n//   };\n// types","map":{"version":3,"sources":["/Users/elizavetaspivak/Documents/study/React/project-friday-team/src/state/login-reducer.ts"],"names":["loginApi","initialState","isLoggedIn","user","_id","email","name","publicCardPacksCount","created","Date","updated","isAdmin","verified","rememberMe","loginReducer","state","action","type","value","userData","setIsLoggedInAC","setUserDataAC","loginTC","data","dispatch","login","then","res","catch","logoutTC","logout"],"mappings":"AACA,SAASA,QAAT,QAAuD,mBAAvD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,GAAG,EAAE,EAAP;AACJC,IAAAA,KAAK,EAAE,EADH;AAEJC,IAAAA,IAAI,EAAE,EAFF;AAGJC,IAAAA,oBAAoB,EAAE,CAHlB;AAGqB;AACzBC,IAAAA,OAAO,EAAEC,IAJL;AAKJC,IAAAA,OAAO,EAAED,IALL;AAMJE,IAAAA,OAAO,EAAE,KANL;AAOJC,IAAAA,QAAQ,EAAE,KAPN;AAOa;AACjBC,IAAAA,UAAU,EAAE;AARR;AAFa,CAArB;AAcA,OAAO,MAAMC,YAAY,GAAG,CAC1BC,KAAuB,GAAGd,YADA,EAE1Be,MAF0B,KAGL;AACrB,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,wBAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYb,QAAAA,UAAU,EAAEc,MAAM,CAACE;AAA/B,OAAP;;AACF,SAAK,qBAAL;AACE;AACA,aAAO,EAAE,GAAGH,KAAL;AAAYZ,QAAAA,IAAI,EAAEa,MAAM,CAACG;AAAzB,OAAP;;AACF;AACE,aAAOJ,KAAP;AAPJ;AASD,CAbM,C,CAeP;;AACA,OAAO,MAAMK,eAAe,GAAIF,KAAD,KAC5B;AAAED,EAAAA,IAAI,EAAE,wBAAR;AAAkCC,EAAAA;AAAlC,CAD4B,CAAxB;AAGP,OAAO,MAAMG,aAAa,GAAIF,QAAD,IAAgC;AAC3D;AACA,SACE;AACAF,IAAAA,IAAI,EAAE,qBADN;AAEAE,IAAAA;AAFA,GADF;AAIa,CANR,C,CAQP;;AACA,OAAO,MAAMG,OAAO,GACjBC,IAAD,IAAsBC,QAAD,IAAqC;AACxDxB,EAAAA,QAAQ,CACLyB,KADH,CACSF,IADT,EAEGG,IAFH,CAESC,GAAD,IAAS;AACbH,IAAAA,QAAQ,CAACJ,eAAe,CAAC,IAAD,CAAhB,CAAR;AACD,GAJH,EAKGQ,KALH;AAMD,CARI;AASP,OAAO,MAAMC,QAAQ,GAAG,MAAOL,QAAD,IAAqC;AACjExB,EAAAA,QAAQ,CACL8B,MADH,GAEGJ,IAFH,CAESC,GAAD,IAAS;AACbH,IAAAA,QAAQ,CAACJ,eAAe,CAAC,KAAD,CAAhB,CAAR;AACD,GAJH,EAKGQ,KALH;AAMD,CAPM,C,CASP;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { Dispatch } from \"redux\";\nimport { loginApi, LoginType, ResponseLoginType } from \"../Login/loginApi\";\n\nconst initialState = {\n  isLoggedIn: false as boolean,\n  user: { _id: ''\t,\n    email: ''\t,\n    name: ''\t,\t\n    publicCardPacksCount: 0, // количество колод\t \n    created: Date, \t\n    updated: Date,\t\n    isAdmin: false,\t\n    verified: false, // подтвердил ли почту\t\n    rememberMe: false\n  } as ResponseLoginType | {},\n};\n\nexport const loginReducer = (\n  state: InitialStateType = initialState,\n  action: ActionsType\n): InitialStateType => {\n  switch (action.type) {\n    case \"LOGIN/SET-IS-LOGGED-IN\":\n      return { ...state, isLoggedIn: action.value };\n    case \"LOGIN/SET_USER_DATA\":\n      // debugger\n      return { ...state, user: action.userData };\n    default:\n      return state;\n  }\n};\n\n// actions\nexport const setIsLoggedInAC = (value: boolean) =>\n  ({ type: \"LOGIN/SET-IS-LOGGED-IN\", value } as const);\n\nexport const setUserDataAC = (userData: ResponseLoginType) =>{\n  //  debugger\n  return (\n    {\n    type: \"LOGIN/SET_USER_DATA\",\n    userData,\n  } as const);}\n\n// thunks\nexport const loginTC =\n  (data: LoginType) => (dispatch: Dispatch<ActionsType>) => {\n    loginApi\n      .login(data)\n      .then((res) => {\n        dispatch(setIsLoggedInAC(true));\n      })\n      .catch();\n  };\nexport const logoutTC = () => (dispatch: Dispatch<ActionsType>) => {\n  loginApi\n    .logout()\n    .then((res) => {\n      dispatch(setIsLoggedInAC(false));\n    })\n    .catch();\n};\n\n// export const getUserDataTC =\n//   (data: ResponseLoginType) => (dispatch: Dispatch<ActionsType>) => {\n//     debugger\n//     dispatch(setUserDataAC(data));\n//     dispatch(setIsLoggedInAC(true));\n//   };\n\n// types\ntype InitialStateType = typeof initialState;\n\nexport type setIsLoggedInACType = ReturnType<typeof setIsLoggedInAC>;\ntype ActionsType =\n  | ReturnType<typeof setIsLoggedInAC>\n  | ReturnType<typeof setUserDataAC>\n\n \n"]},"metadata":{},"sourceType":"module"}