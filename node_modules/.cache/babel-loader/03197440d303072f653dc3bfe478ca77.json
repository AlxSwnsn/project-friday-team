{"ast":null,"code":"import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'https://neko-back.herokuapp.com/2.0/',\n  withCredentials: true\n});\nexport const AuthAPI = {\n  createUser(email, password) {\n    return instance.post('/auth/register', {\n      email,\n      password\n    });\n  }\n\n};\nexport const RestoreAPI = {\n  restore(email) {\n    return instance.post('auth/forgot', {\n      email,\n      message: \"password recovery link: <a href='http://localhost:3000/project-friday-team#/newpassword/$token$'>link</a>\"\n    });\n  },\n\n  create(password, token) {\n    return instance.post('auth/set-new-password', {\n      password,\n      resetPasswordToken: token\n    });\n  }\n\n};","map":{"version":3,"sources":["/Users/elizavetaspivak/Documents/study/React/project-friday-team/src/dal/api.ts"],"names":["axios","instance","create","baseURL","withCredentials","AuthAPI","createUser","email","password","post","RestoreAPI","restore","message","token","resetPasswordToken"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE,sCADiB;AAE1BC,EAAAA,eAAe,EAAE;AAFS,CAAb,CAAjB;AAeA,OAAO,MAAMC,OAAO,GAAG;AACnBC,EAAAA,UAAU,CAACC,KAAD,EAAgBC,QAAhB,EAAkC;AACxC,WAAOP,QAAQ,CAACQ,IAAT,CAA8B,gBAA9B,EAAgD;AAACF,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAhD,CAAP;AACH;;AAHkB,CAAhB;AAMP,OAAO,MAAME,UAAU,GAAG;AACtBC,EAAAA,OAAO,CAACJ,KAAD,EAAgB;AACnB,WAAON,QAAQ,CAACQ,IAAT,CAAmC,aAAnC,EACH;AACIF,MAAAA,KADJ;AAEIK,MAAAA,OAAO,EAAE;AAFb,KADG,CAAP;AAKH,GAPqB;;AAQtBV,EAAAA,MAAM,CAACM,QAAD,EAAmBK,KAAnB,EAA+B;AACjC,WAAOZ,QAAQ,CAACQ,IAAT,CAAmC,uBAAnC,EAA4D;AAACD,MAAAA,QAAD;AAAWM,MAAAA,kBAAkB,EAAED;AAA/B,KAA5D,CAAP;AACH;;AAVqB,CAAnB","sourcesContent":["import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\n    withCredentials: true\n})\n\nexport type CreateUserType = {\n    email: string\n    password: string\n}\n\nexport type RestoreResponseType = {\n    info: string\n    error: string\n}\n\nexport const AuthAPI = {\n    createUser(email: string, password: string) {\n        return instance.post<CreateUserType>('/auth/register', {email, password});\n    }\n}\n\nexport const RestoreAPI = {\n    restore(email: string) {\n        return instance.post<RestoreResponseType>('auth/forgot',\n            {\n                email,\n                message: \"password recovery link: <a href='http://localhost:3000/project-friday-team#/newpassword/$token$'>link</a>\"\n            },);\n    },\n    create(password: string, token: any) {\n        return instance.post<RestoreResponseType>('auth/set-new-password', {password, resetPasswordToken: token})\n    }\n}"]},"metadata":{},"sourceType":"module"}