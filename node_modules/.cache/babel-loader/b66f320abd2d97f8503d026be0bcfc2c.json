{"ast":null,"code":"var _jsxFileName = \"/Users/elizavetaspivak/Documents/study/React/project-friday-team/src/Register/Register.tsx\",\n    _s = $RefreshSig$();\n\nimport { Formik } from 'formik';\nimport { CreateUserThunk } from '../state/register-reducer';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Register = () => {\n  _s();\n\n  let dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        dispatch(CreateUserThunk(values.email, values.password));\n        setSubmitting(false);\n      },\n      children: ({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n        /* and other goodies */\n\n      }) => /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), errors.email && touched.email && errors.email, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), errors.password && touched.password && errors.password, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/elizavetaspivak/Documents/study/React/project-friday-team/src/Register/Register.tsx"],"names":["Formik","CreateUserThunk","useDispatch","Register","dispatch","email","password","values","setSubmitting","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":";;;AACA,SAAQA,MAAR,QAAqB,QAArB;AACA,SAAQC,eAAR,QAA8B,2BAA9B;AACA,SAAQC,WAAR,QAA0B,aAA1B;;AAGA,OAAO,MAAMC,QAAkB,GAAG,MAAM;AAAA;;AACpC,MAAIC,QAAQ,GAAGF,WAAW,EAA1B;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AACI,MAAA,aAAa,EAAE;AAACG,QAAAA,KAAK,EAAE,EAAR;AAAYC,QAAAA,QAAQ,EAAE;AAAtB,OADnB;AAGI,MAAA,QAAQ,EAAE,CAACC,MAAD,EAAS;AAACC,QAAAA;AAAD,OAAT,KAA6B;AACnCJ,QAAAA,QAAQ,CAACH,eAAe,CAACM,MAAM,CAACF,KAAR,EAAeE,MAAM,CAACD,QAAtB,CAAhB,CAAR;AACAE,QAAAA,aAAa,CAAC,KAAD,CAAb;AACH,OANL;AAAA,gBAQK,CAAC;AACID,QAAAA,MADJ;AAEIE,QAAAA,MAFJ;AAGIC,QAAAA,OAHJ;AAIIC,QAAAA,YAJJ;AAKIC,QAAAA,UALJ;AAMIC,QAAAA,YANJ;AAOIC,QAAAA;AACA;;AARJ,OAAD,kBAUG;AAAM,QAAA,QAAQ,EAAED,YAAhB;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,IAAI,EAAC,OAFT;AAGI,UAAA,QAAQ,EAAEF,YAHd;AAII,UAAA,MAAM,EAAEC,UAJZ;AAKI,UAAA,KAAK,EAAEL,MAAM,CAACF;AALlB;AAAA;AAAA;AAAA;AAAA,gBADJ,EAQKI,MAAM,CAACJ,KAAP,IAAgBK,OAAO,CAACL,KAAxB,IAAiCI,MAAM,CAACJ,KAR7C,eASI;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,QAAQ,EAAEM,YAHd;AAII,UAAA,MAAM,EAAEC,UAJZ;AAKI,UAAA,KAAK,EAAEL,MAAM,CAACD;AALlB;AAAA;AAAA;AAAA;AAAA,gBATJ,EAgBKG,MAAM,CAACH,QAAP,IAAmBI,OAAO,CAACJ,QAA3B,IAAuCG,MAAM,CAACH,QAhBnD,eAiBI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,QAAQ,EAAEQ,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBR;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8CH,CAjDM;;GAAMX,Q;UACMD,W;;;KADNC,Q","sourcesContent":["import s from './Register.module.css'\nimport {Formik} from 'formik';\nimport {CreateUserThunk} from '../state/register-reducer';\nimport {useDispatch} from 'react-redux';\n\n\nexport const Register: React.FC = () => {\n    let dispatch = useDispatch()\n\n    return (\n        <div>\n            <h1>Register</h1>\n            <Formik\n                initialValues={{email: '', password: ''}}\n\n                onSubmit={(values, {setSubmitting}) => {\n                    dispatch(CreateUserThunk(values.email, values.password))\n                    setSubmitting(false);\n                }}\n            >\n                {({\n                      values,\n                      errors,\n                      touched,\n                      handleChange,\n                      handleBlur,\n                      handleSubmit,\n                      isSubmitting,\n                      /* and other goodies */\n                  }) => (\n                    <form onSubmit={handleSubmit}>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.email}\n                        />\n                        {errors.email && touched.email && errors.email}\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.password}\n                        />\n                        {errors.password && touched.password && errors.password}\n                        <button type=\"submit\" disabled={isSubmitting}>\n                            Submit\n                        </button>\n                    </form>\n                )}\n            </Formik>\n        </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}