{"ast":null,"code":"var _jsxFileName = \"/Users/elizavetaspivak/Documents/study/React/project-friday-team/src/Register/Register.tsx\",\n    _s = $RefreshSig$();\n\nimport s from './Register.module.css';\nimport { Formik } from 'formik';\nimport { CreateUserThunk } from '../state/register-reducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TextField } from '@material-ui/core';\nimport { Redirect } from 'react-router-dom';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Register = () => {\n  _s();\n\n  let dispatch = useDispatch();\n  let isRegister = useSelector(state => state.register.isRegister);\n\n  if (isRegister) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.register,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.registerBlock,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"It-incubator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.form,\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            email: '',\n            password: '',\n            confirmPassword: ''\n          },\n          validate: values => {\n            const errors = {};\n\n            if (!values.email) {\n              errors.email = 'Required';\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n              errors.email = 'Invalid email address';\n            }\n\n            if (!values.password) {\n              errors.password = 'Required';\n            } else if (values.password.length < 7) {\n              errors.password = 'Email address too short';\n            }\n\n            return errors;\n          },\n          onSubmit: (values, {\n            setSubmitting\n          }) => {\n            dispatch(CreateUserThunk(values.email, values.password));\n            setSubmitting(false);\n          },\n          children: ({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting\n            /* and other goodies */\n\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.formInput,\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                type: \"email\",\n                name: \"email\",\n                required: true,\n                id: \"standard-required\",\n                onChange: handleChange,\n                onBlur: handleBlur,\n                value: values.email,\n                placeholder: 'Email',\n                helperText: errors.email && touched.email ? errors.email : 'Enter email-id'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"password\",\n                type: \"password\",\n                name: \"password\",\n                onChange: handleChange,\n                onBlur: handleBlur,\n                value: values.password,\n                helperText: errors.password && touched.password ? errors.password : 'Enter password',\n                placeholder: 'Password'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"confirmPassword\",\n                type: \"password\",\n                name: \"confirmPassword\",\n                onChange: handleChange,\n                onBlur: handleBlur,\n                value: values.confirmPassword,\n                placeholder: 'Confirm Password'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this), errors.confirmPassword && touched.confirmPassword && errors.confirmPassword, /*#__PURE__*/_jsxDEV(\"div\", {\n                className: s.buttonBlock,\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: s.cancelButton,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: s.registerButton,\n                  type: \"submit\",\n                  disabled: isSubmitting,\n                  children: \"Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"Nelh9tYArOtwwol8WXkFFWhfrBM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/elizavetaspivak/Documents/study/React/project-friday-team/src/Register/Register.tsx"],"names":["s","Formik","CreateUserThunk","useDispatch","useSelector","TextField","Redirect","React","Register","dispatch","isRegister","state","register","registerBlock","form","email","password","confirmPassword","values","errors","test","length","setSubmitting","touched","handleChange","handleBlur","handleSubmit","isSubmitting","formInput","buttonBlock","cancelButton","registerButton"],"mappings":"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","sourcesContent":["import s from './Register.module.css'\nimport {Formik} from 'formik';\nimport {CreateUserThunk} from '../state/register-reducer';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {LinearProgress, TextField} from '@material-ui/core';\nimport {AppRootStateType} from '../state/store';\nimport { Redirect } from 'react-router-dom';\nimport React from 'react';\n\n\nexport const Register: React.FC = () => {\n    let dispatch = useDispatch()\n\n    let isRegister = useSelector<AppRootStateType, boolean>(state => state.register.isRegister)\n\n    if(isRegister){\n        return <Redirect to=\"/login\" />\n    }\n\n    return (\n        <div className={s.register}>\n            <div className={s.registerBlock}>\n                <h1>It-incubator</h1>\n                <h2>Sign Up</h2>\n                <div className={s.form}>\n                    <Formik\n                        initialValues={{email: '', password: '', confirmPassword: ''}}\n                        validate={values => {\n                            const errors:any = {};\n                            if (!values.email) {\n                                errors.email = 'Required';\n                            } else if (\n                                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                            ) {\n                                errors.email = 'Invalid email address';\n                            }\n                            if (!values.password) {\n                                errors.password = 'Required';\n                            } else if (values.password.length < 7) {\n                                errors.password = 'Email address too short';\n                            }\n                            return errors;\n                        }}\n                        onSubmit={(values, {setSubmitting}) => {\n                            dispatch(CreateUserThunk(values.email, values.password))\n                            setSubmitting(false);\n                        }}\n                    >\n                        {({\n                              values,\n                              errors,\n                              touched,\n                              handleChange,\n                              handleBlur,\n                              handleSubmit,\n                              isSubmitting,\n                              /* and other goodies */\n                          }) => (<div className={s.formInput}>\n                                <form onSubmit={handleSubmit}>\n                                    <TextField type=\"email\"\n                                               name=\"email\"\n                                               required id=\"standard-required\"\n                                               onChange={handleChange}\n                                               onBlur={handleBlur}\n                                               value={values.email}\n                                               placeholder={'Email'}\n                                               helperText={\n                                                   errors.email && touched.email\n                                                       ? errors.email\n                                                       : 'Enter email-id'\n                                               }/>\n                                    <TextField id=\"password\"\n                                               type=\"password\"\n                                               name=\"password\"\n                                               onChange={handleChange}\n                                               onBlur={handleBlur}\n                                               value={values.password}\n                                               helperText={\n                                                   errors.password && touched.password\n                                                       ? errors.password\n                                                       : 'Enter password'\n                                               }\n                                               placeholder={'Password'}/>\n                                    <TextField id=\"confirmPassword\"\n                                               type=\"password\"\n                                               name=\"confirmPassword\"\n                                               onChange={handleChange}\n                                               onBlur={handleBlur}\n                                               value={values.confirmPassword}\n                                               placeholder={'Confirm Password'}/>\n                                    {errors.confirmPassword && touched.confirmPassword && errors.confirmPassword}\n                                    <div className={s.buttonBlock}>\n                                        <button className={s.cancelButton}>\n                                            Cancel\n                                        </button>\n                                        <button className={s.registerButton} type=\"submit\" disabled={isSubmitting}>\n                                            Register\n                                        </button>\n                                    </div>\n                                </form>\n                            </div>\n                        )}\n                    </Formik>\n                </div>\n            </div>\n        </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}