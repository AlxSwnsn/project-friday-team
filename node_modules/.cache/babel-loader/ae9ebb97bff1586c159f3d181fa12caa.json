{"ast":null,"code":"var _jsxFileName = \"/Users/elizavetaspivak/Documents/study/React/project-friday-team/src/Test/c6-SuperRadio/SuperRadio.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SuperRadio = ({\n  type,\n  name,\n  options,\n  value,\n  onChange,\n  onChangeOption,\n  ...restProps\n}) => {\n  const onChangeCallback = e => {\n    // onChange, onChangeOption\n    onChange && onChange(e);\n    onChangeOption && onChangeOption(e.currentTarget.value);\n  };\n\n  const mappedOptions = options ? options.map((o, i) =>\n  /*#__PURE__*/\n  // map options with key\n  _jsxDEV(\"label\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      name: name,\n      checked: o === value,\n      value: o,\n      onChange: onChangeCallback,\n      ...restProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), o]\n  }, name + \"-\" + i, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this)) : [];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: mappedOptions\n  }, void 0, false);\n};\n\n_c = SuperRadio;\nexport default SuperRadio;\n\nvar _c;\n\n$RefreshReg$(_c, \"SuperRadio\");","map":{"version":3,"sources":["/Users/elizavetaspivak/Documents/study/React/project-friday-team/src/Test/c6-SuperRadio/SuperRadio.tsx"],"names":["React","SuperRadio","type","name","options","value","onChange","onChangeOption","restProps","onChangeCallback","e","currentTarget","mappedOptions","map","o","i"],"mappings":";AAAA,OAAOA,KAAP,MAAyE,OAAzE;;;;AASA,MAAMC,UAAyC,GAAG,CAC9C;AACIC,EAAAA,IADJ;AACUC,EAAAA,IADV;AAEIC,EAAAA,OAFJ;AAEaC,EAAAA,KAFb;AAGIC,EAAAA,QAHJ;AAGcC,EAAAA,cAHd;AAII,KAAGC;AAJP,CAD8C,KAO7C;AACD,QAAMC,gBAAgB,GAAIC,CAAD,IAAsC;AAC3D;AACAJ,IAAAA,QAAQ,IAAIA,QAAQ,CAACI,CAAD,CAApB;AACAH,IAAAA,cAAc,IAAIA,cAAc,CAACG,CAAC,CAACC,aAAF,CAAgBN,KAAjB,CAAhC;AACH,GAJD;;AAOA,QAAMO,aAAoB,GAAGR,OAAO,GAAGA,OAAO,CAACS,GAAR,CAAY,CAACC,CAAD,EAAIC,CAAJ;AAAA;AAAY;AAC3D;AAAA,4BACI;AACI,MAAA,IAAI,EAAE,OADV;AAEI,MAAA,IAAI,EAAEZ,IAFV;AAGI,MAAA,OAAO,EAAEW,CAAC,KAAKT,KAHnB;AAII,MAAA,KAAK,EAAES,CAJX;AAKI,MAAA,QAAQ,EAAEL,gBALd;AAAA,SAMQD;AANR;AAAA;AAAA;AAAA;AAAA,YADJ,EAUKM,CAVL;AAAA,KAAYX,IAAI,GAAG,GAAP,GAAaY,CAAzB;AAAA;AAAA;AAAA;AAAA,UADmC,CAAH,GAa/B,EAbL;AAeA,sBACI;AAAA,cACKH;AADL,mBADJ;AAKH,CAnCD;;KAAMX,U;AAqCN,eAAeA,UAAf","sourcesContent":["import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // onChange, onChangeOption\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\n        <label key={name + \"-\" + i}>\n            <input\n                type={\"radio\"}\n                name={name}\n                checked={o === value}\n                value={o}\n                onChange={onChangeCallback}\n                {...restProps}\n                // name, checked, value, onChange\n            />\n            {o}\n        </label>\n    )) : [];\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    );\n}\n\nexport default SuperRadio;\n"]},"metadata":{},"sourceType":"module"}