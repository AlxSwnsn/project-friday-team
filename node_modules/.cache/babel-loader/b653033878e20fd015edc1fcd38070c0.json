{"ast":null,"code":"var _jsxFileName = \"/Users/elizavetaspivak/Documents/study/React/project-friday-team/src/Test/c4-SuperEditableSpan/SuperEditableSpan.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport SuperInputText from '../c1-SuperInputText/SuperInputText';\nimport s from './SuperEditableSpan.module.css'; // тип пропсов обычного инпута\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SuperEditableSpan = ({\n  autoFocus,\n  // игнорировать изменение этого пропса\n  onBlur,\n  onEnter,\n  spanProps,\n  ...restProps // все остальные пропсы попадут в объект restProps\n\n}) => {\n  _s();\n\n  const [editMode, setEditMode] = useState(false);\n  const {\n    children,\n    onDoubleClick,\n    className,\n    ...restSpanProps\n  } = spanProps || {};\n\n  const onEnterCallback = () => {\n    // setEditMode() // выключить editMode при нажатии Enter\n    setEditMode(false);\n    onEnter && onEnter();\n  };\n\n  const onBlurCallback = e => {\n    // setEditMode() // выключить editMode при нажатии за пределами инпута\n    setEditMode(false);\n    onBlur && onBlur(e);\n  };\n\n  const onDoubleClickCallBack = e => {\n    // setEditMode() // включить editMode при двойном клике\n    setEditMode(true);\n    onDoubleClick && onDoubleClick(e);\n  };\n\n  const spanClassName = `${s.spanText} ${className}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.editableSpan,\n    children: editMode ? /*#__PURE__*/_jsxDEV(SuperInputText, {\n      autoFocus: true // пропсу с булевым значением не обязательно указывать true\n      ,\n      onBlur: onBlurCallback,\n      onEnter: onEnterCallback,\n      ...restProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      onDoubleClick: onDoubleClickCallBack,\n      className: spanClassName,\n      ...restSpanProps,\n      children: children || restProps.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SuperEditableSpan, \"rVR9Tx2gSsa7LZkJIG7mlWuXVu0=\");\n\n_c = SuperEditableSpan;\nexport default SuperEditableSpan;\n\nvar _c;\n\n$RefreshReg$(_c, \"SuperEditableSpan\");","map":{"version":3,"sources":["/Users/elizavetaspivak/Documents/study/React/project-friday-team/src/Test/c4-SuperEditableSpan/SuperEditableSpan.tsx"],"names":["React","useState","SuperInputText","s","SuperEditableSpan","autoFocus","onBlur","onEnter","spanProps","restProps","editMode","setEditMode","children","onDoubleClick","className","restSpanProps","onEnterCallback","onBlurCallback","e","onDoubleClickCallBack","spanClassName","spanText","editableSpan","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAuEC,QAAvE,QAAsF,OAAtF;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,CAAP,MAAc,gCAAd,C,CAEA;;;;AAgBA,MAAMC,iBAAkD,GAAG,CACvD;AACIC,EAAAA,SADJ;AACe;AACXC,EAAAA,MAFJ;AAGIC,EAAAA,OAHJ;AAIIC,EAAAA,SAJJ;AAMI,KAAGC,SANP,CAMgB;;AANhB,CADuD,KAStD;AAAA;;AACD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAU,KAAV,CAAxC;AACA,QAAM;AAACW,IAAAA,QAAD;AAAWC,IAAAA,aAAX;AAA0BC,IAAAA,SAA1B;AAAqC,OAAGC;AAAxC,MAAyDP,SAAS,IAAI,EAA5E;;AAEA,QAAMQ,eAAe,GAAG,MAAM;AAC1B;AACAL,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAJ,IAAAA,OAAO,IAAIA,OAAO,EAAlB;AACH,GAJD;;AAKA,QAAMU,cAAc,GAAIC,CAAD,IAA2C;AAC9D;AACAP,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAL,IAAAA,MAAM,IAAIA,MAAM,CAACY,CAAD,CAAhB;AACH,GAJD;;AAKA,QAAMC,qBAAqB,GAAID,CAAD,IAAsD;AAChF;AACAP,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,aAAa,IAAIA,aAAa,CAACK,CAAD,CAA9B;AACH,GAJD;;AAMA,QAAME,aAAa,GAAI,GAAEjB,CAAC,CAACkB,QAAS,IAAGP,SAAU,EAAjD;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEX,CAAC,CAACmB,YAAlB;AAAA,cACKZ,QAAQ,gBAED,QAAC,cAAD;AACI,MAAA,SAAS,MADb,CACc;AADd;AAEI,MAAA,MAAM,EAAEO,cAFZ;AAGI,MAAA,OAAO,EAAED,eAHb;AAAA,SAKQP;AALR;AAAA;AAAA;AAAA;AAAA,YAFC,gBAUD;AACI,MAAA,aAAa,EAAEU,qBADnB;AAEI,MAAA,SAAS,EAAEC,aAFf;AAAA,SAIQL,aAJR;AAAA,gBAOKH,QAAQ,IAAIH,SAAS,CAACc;AAP3B;AAAA;AAAA;AAAA;AAAA;AAXZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAxDD;;GAAMnB,iB;;KAAAA,iB;AA0DN,eAAeA,iBAAf","sourcesContent":["import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../c1-SuperInputText/SuperInputText'\nimport s from './SuperEditableSpan.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        // setEditMode() // выключить editMode при нажатии Enter\n        setEditMode(false)\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\n        setEditMode(false)\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        // setEditMode() // включить editMode при двойном клике\n        setEditMode(true)\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${s.spanText} ${className}`\n\n    return (\n        <div className={s.editableSpan}>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </div>\n    )\n}\n\nexport default SuperEditableSpan\n"]},"metadata":{},"sourceType":"module"}