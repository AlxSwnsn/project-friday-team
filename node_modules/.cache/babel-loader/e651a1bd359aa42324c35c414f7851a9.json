{"ast":null,"code":"import { AuthAPI } from '../dal/api';\nexport const registerReducer = (state = '', action) => {\n  switch (action.type) {\n    case '':\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nconst createUserData = (email, password) => ({\n  type: 'CREATE-USER-DATA',\n  email,\n  password\n});\n\nexport const CreateUserThunk = (email, password) => {\n  return dispatch => {\n    dispatch(setStatusAC('loading'));\n    AuthAPI.createUser(email, password).then(res => {\n      dispatch(createUserData(email, password));\n      dispatch(setStatusAC('succeeded'));\n    });\n  };\n};\n_c = CreateUserThunk;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateUserThunk\");","map":{"version":3,"sources":["/Users/elizavetaspivak/Documents/study/React/project-friday-team/src/state/register-reducer.ts"],"names":["AuthAPI","registerReducer","state","action","type","createUserData","email","password","CreateUserThunk","dispatch","setStatusAC","createUser","then","res"],"mappings":"AACA,SAAQA,OAAR,QAAsB,YAAtB;AAQA,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAA6B;AACxD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,EAAL;AACI,aAAOF,KAAP;;AACJ;AACI,aAAOA,KAAP;AAJR;AAMH,CAPM;;AASP,MAAMG,cAAc,GAAG,CAACC,KAAD,EAAgBC,QAAhB,MAA4D;AAC/EH,EAAAA,IAAI,EAAE,kBADyE;AAE/EE,EAAAA,KAF+E;AAExEC,EAAAA;AAFwE,CAA5D,CAAvB;;AAKA,OAAO,MAAMC,eAAe,GAAG,CAACF,KAAD,EAAgBC,QAAhB,KAAqC;AAChE,SAAQE,QAAD,IAAwB;AAC3BA,IAAAA,QAAQ,CAACC,WAAW,CAAC,SAAD,CAAZ,CAAR;AACAV,IAAAA,OAAO,CAACW,UAAR,CAAmBL,KAAnB,EAA0BC,QAA1B,EACKK,IADL,CACWC,GAAD,IAAS;AAEXJ,MAAAA,QAAQ,CAACJ,cAAc,CAACC,KAAD,EAAOC,QAAP,CAAf,CAAR;AACAE,MAAAA,QAAQ,CAACC,WAAW,CAAC,WAAD,CAAZ,CAAR;AACH,KALL;AAMH,GARD;AASH,CAVM;KAAMF,e","sourcesContent":["import { Dispatch } from \"redux\"\nimport {AuthAPI} from '../dal/api';\n\ntype createUserDataACType = {\n    type: 'CREATE-USER-DATA'\n    email: string\n    password: string\n}\n\nexport const registerReducer = (state = '', action: any) => {\n    switch (action.type) {\n        case '':\n            return state\n        default:\n            return state\n    }\n}\n\nconst createUserData = (email: string, password: string): createUserDataACType => ({\n    type: 'CREATE-USER-DATA',\n    email, password\n})\n\nexport const CreateUserThunk = (email: string, password: string) => {\n    return (dispatch: Dispatch) => {\n        dispatch(setStatusAC('loading'))\n        AuthAPI.createUser(email, password)\n            .then((res) => {\n                \n                dispatch(createUserData(email,password))\n                dispatch(setStatusAC('succeeded'))\n            })\n    }\n}"]},"metadata":{},"sourceType":"module"}