{"ast":null,"code":"import _objectSpread from\"/Users/elizavetaspivak/Documents/study/React/project-friday-team/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import s from'./PasswordRecovery.module.css';import{useDispatch,useSelector}from\"react-redux\";import{useFormik}from\"formik\";import FormGroup from\"@material-ui/core/FormGroup\";import{TextField}from\"@material-ui/core\";import{NavLink,Redirect}from\"react-router-dom\";import React from\"react\";import{passwordRecoveryTC}from\"../state/password-reducer\";import{ErrorSnackbar}from'../Snackbar/ErrorSnackBar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function PasswordRecovery(){var dispatch=useDispatch();var emailIsSent=useSelector(function(state){return state.passwordRecovery.emailIsSent;});var formik=useFormik({initialValues:{email:\"\"},validate:function validate(values){var errors={};if(!values.email){errors.email=\"Required\";}else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)){errors.email=\"Invalid email address\";}return errors;},onSubmit:function onSubmit(values){dispatch(passwordRecoveryTC(values.email));formik.resetForm();}});if(emailIsSent){return/*#__PURE__*/_jsx(Redirect,{to:\"/recoveryconfirmation\"});}return/*#__PURE__*/_jsxs(\"div\",{className:s.recovery,children:[/*#__PURE__*/_jsxs(\"div\",{className:s.recoveryBlock,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"It-incubator\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Forgot password\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:formik.handleSubmit,children:[/*#__PURE__*/_jsxs(FormGroup,{className:s.form,children:[/*#__PURE__*/_jsx(TextField,_objectSpread({type:\"email\",placeholder:'Email',helperText:'Enter your email address to receive password recovery instructions '},formik.getFieldProps(\"email\"))),formik.touched.email&&formik.errors.email?/*#__PURE__*/_jsx(\"div\",{style:{color:\"red\"},children:formik.errors.email}):null,/*#__PURE__*/_jsx(\"div\",{className:s.buttonBlock,children:/*#__PURE__*/_jsx(\"button\",{className:s.recoveryButton,children:\"Get Instructions\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:s.navlinkBlock,children:[/*#__PURE__*/_jsx(\"div\",{children:\"Still remember your good old password?\"}),/*#__PURE__*/_jsx(NavLink,{className:s.navlink,to:\"/login\",children:\"Try logging in\"})]})]})]}),/*#__PURE__*/_jsx(ErrorSnackbar,{})]});}","map":{"version":3,"sources":["/Users/elizavetaspivak/Documents/study/React/project-friday-team/src/PasswordRecovery/PasswordRecovery.tsx"],"names":["s","useDispatch","useSelector","useFormik","FormGroup","TextField","NavLink","Redirect","React","passwordRecoveryTC","ErrorSnackbar","PasswordRecovery","dispatch","emailIsSent","state","passwordRecovery","formik","initialValues","email","validate","values","errors","test","onSubmit","resetForm","recovery","recoveryBlock","handleSubmit","form","getFieldProps","touched","color","buttonBlock","recoveryButton","navlinkBlock","navlink"],"mappings":"sLAAA,MAAOA,CAAAA,CAAP,KAAc,+BAAd,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,aAAvC,CACA,OAAQC,SAAR,KAAwB,QAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,OAAQC,SAAR,KAAwB,mBAAxB,CACA,OAAQC,OAAR,CAAiBC,QAAjB,KAAgC,kBAAhC,CACA,MAAOC,CAAAA,KAAP,KAA+B,OAA/B,CACA,OAAQC,kBAAR,KAAiC,2BAAjC,CAEA,OAAQC,aAAR,KAA4B,2BAA5B,C,wFAMA,MAAO,SAASC,CAAAA,gBAAT,EAA4B,CAC/B,GAAMC,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CAEA,GAAMY,CAAAA,WAAW,CAAGX,WAAW,CAA4B,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACC,gBAAN,CAAuBF,WAAlC,EAA5B,CAA/B,CAKA,GAAMG,CAAAA,MAAM,CAAGb,SAAS,CAAC,CACrBc,aAAa,CAAE,CACXC,KAAK,CAAE,EADI,CADM,CAIrBC,QAAQ,CAAE,kBAACC,MAAD,CAAY,CAClB,GAAMC,CAAAA,MAAuB,CAAG,EAAhC,CACA,GAAI,CAACD,MAAM,CAACF,KAAZ,CAAmB,CACfG,MAAM,CAACH,KAAP,CAAe,UAAf,CACH,CAFD,IAEO,IACH,CAAC,4CAA4CI,IAA5C,CAAiDF,MAAM,CAACF,KAAxD,CADE,CAEL,CACEG,MAAM,CAACH,KAAP,CAAe,uBAAf,CACH,CACD,MAAOG,CAAAA,MAAP,CACH,CAdoB,CAerBE,QAAQ,CAAE,kBAACH,MAAD,CAAY,CAClBR,QAAQ,CAACH,kBAAkB,CAACW,MAAM,CAACF,KAAR,CAAnB,CAAR,CACAF,MAAM,CAACQ,SAAP,GACH,CAlBoB,CAAD,CAAxB,CAqBA,GAAIX,WAAJ,CAAiB,CACb,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAE,uBAAd,EAAP,CACH,CAED,mBACI,aAAK,SAAS,CAAEb,CAAC,CAACyB,QAAlB,wBACI,aAAK,SAAS,CAAEzB,CAAC,CAAC0B,aAAlB,wBACI,oCADJ,cAEI,uCAFJ,cAGI,cAAM,QAAQ,CAAEV,MAAM,CAACW,YAAvB,wBACI,MAAC,SAAD,EAAW,SAAS,CAAE3B,CAAC,CAAC4B,IAAxB,wBACI,KAAC,SAAD,gBAAW,IAAI,CAAC,OAAhB,CAAwB,WAAW,CAAE,OAArC,CACW,UAAU,CAAE,qEADvB,EAEeZ,MAAM,CAACa,aAAP,CAAqB,OAArB,CAFf,EADJ,CAIKb,MAAM,CAACc,OAAP,CAAeZ,KAAf,EAAwBF,MAAM,CAACK,MAAP,CAAcH,KAAtC,cACG,YAAK,KAAK,CAAE,CAACa,KAAK,CAAE,KAAR,CAAZ,UAA6Bf,MAAM,CAACK,MAAP,CAAcH,KAA3C,EADH,CAEG,IANR,cAOI,YAAK,SAAS,CAAElB,CAAC,CAACgC,WAAlB,uBACI,eAAQ,SAAS,CAAEhC,CAAC,CAACiC,cAArB,8BADJ,EAPJ,GADJ,cAYI,aAAK,SAAS,CAAEjC,CAAC,CAACkC,YAAlB,wBACI,+DADJ,cAEI,KAAC,OAAD,EAAS,SAAS,CAAElC,CAAC,CAACmC,OAAtB,CAA+B,EAAE,CAAE,QAAnC,4BAFJ,GAZJ,GAHJ,GADJ,cAsBI,KAAC,aAAD,IAtBJ,GADJ,CA4BH","sourcesContent":["import s from './PasswordRecovery.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useFormik} from \"formik\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport {TextField} from \"@material-ui/core\";\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport React, {useEffect} from \"react\";\nimport {passwordRecoveryTC} from \"../state/password-reducer\";\nimport {AppRootStateType} from \"../state/store\";\nimport {ErrorSnackbar} from '../Snackbar/ErrorSnackBar';\n\ntype FormikErrorType = {\n    email?: string;\n};\n\nexport function PasswordRecovery() {\n    const dispatch = useDispatch();\n\n    const emailIsSent = useSelector<AppRootStateType, boolean>((state) => state.passwordRecovery.emailIsSent);\n\n\n\n\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n        },\n        validate: (values) => {\n            const errors: FormikErrorType = {};\n            if (!values.email) {\n                errors.email = \"Required\";\n            } else if (\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n            ) {\n                errors.email = \"Invalid email address\";\n            }\n            return errors;\n        },\n        onSubmit: (values) => {\n            dispatch(passwordRecoveryTC(values.email));\n            formik.resetForm();\n        }\n    })\n\n    if (emailIsSent) {\n        return <Redirect to={\"/recoveryconfirmation\"}/>;\n    }\n\n    return (\n        <div className={s.recovery}>\n            <div className={s.recoveryBlock}>\n                <h1>It-incubator</h1>\n                <h2>Forgot password</h2>\n                <form onSubmit={formik.handleSubmit}>\n                    <FormGroup className={s.form}>\n                        <TextField type=\"email\" placeholder={'Email'}\n                                   helperText={'Enter your email address to receive password recovery instructions '}\n                                   {...formik.getFieldProps(\"email\")} />\n                        {formik.touched.email && formik.errors.email ? (\n                            <div style={{color: \"red\"}}>{formik.errors.email}</div>\n                        ) : null}\n                        <div className={s.buttonBlock}>\n                            <button className={s.recoveryButton}>Get Instructions</button>\n                        </div>\n                    </FormGroup>\n                    <div className={s.navlinkBlock}>\n                        <div>Still remember your good old password?</div>\n                        <NavLink className={s.navlink} to={\"/login\"}>Try logging in</NavLink>\n                    </div>\n                </form>\n            </div>\n            <ErrorSnackbar/>\n        </div>\n\n    )\n\n}"]},"metadata":{},"sourceType":"module"}