{"ast":null,"code":"import _objectSpread from\"/Users/elizavetaspivak/Documents/study/React/project-friday-team/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{AuthAPI}from'../dal/api';import{setErrorAC,setStatusAC}from'./app-reducer';// types\nvar initialState={isLoggedIn:false,user:{_id:'',email:'',name:'',publicCardPacksCount:0,// количество колод\ncreated:Date,updated:Date,isAdmin:false,verified:false,// подтвердил ли почту\nrememberMe:false}};// reducer\nexport var loginReducer=function loginReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'LOGIN/SET-IS-LOGGED-IN':return _objectSpread(_objectSpread({},state),{},{isLoggedIn:action.value});case'LOGIN/SET_USER_DATA':return _objectSpread(_objectSpread({},state),{},{user:action.userData});default:return state;}};// actions\nexport var setIsLoggedInAC=function setIsLoggedInAC(value){return{type:'LOGIN/SET-IS-LOGGED-IN',value:value};};export var setUserDataAC=function setUserDataAC(userData){return{type:'LOGIN/SET_USER_DATA',userData:userData};};// thunks\nexport var loginTC=function loginTC(data){return function(dispatch){dispatch(setStatusAC(true));AuthAPI.login(data).then(function(res){dispatch(setIsLoggedInAC(true));dispatch(setUserDataAC(res.data));dispatch(setStatusAC(false));}).catch(function(e){var error=e.response?e.response.data.error:e.message+', more details in the console';dispatch(setErrorAC(error));;dispatch(setStatusAC(false));});};};export var logoutTC=function logoutTC(){return function(dispatch){dispatch(setStatusAC(true));AuthAPI.logout().then(function(res){dispatch(setIsLoggedInAC(false));dispatch(setStatusAC(false));}).catch(function(e){var error=e.response?e.response.data.error:e.message+', more details in the console';dispatch(setErrorAC(error));dispatch(setStatusAC(false));});};};","map":{"version":3,"sources":["/Users/elizavetaspivak/Documents/study/React/project-friday-team/src/state/login-reducer.ts"],"names":["AuthAPI","setErrorAC","setStatusAC","initialState","isLoggedIn","user","_id","email","name","publicCardPacksCount","created","Date","updated","isAdmin","verified","rememberMe","loginReducer","state","action","type","value","userData","setIsLoggedInAC","setUserDataAC","loginTC","data","dispatch","login","then","res","catch","e","error","response","message","logoutTC","logout"],"mappings":"sLACA,OAAsCA,OAAtC,KAAoD,YAApD,CACA,OAAQC,UAAR,CAAoCC,WAApC,KAAuE,eAAvE,CAEA;AAUA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,UAAU,CAAE,KADK,CAEjBC,IAAI,CAAE,CACFC,GAAG,CAAE,EADH,CAEFC,KAAK,CAAE,EAFL,CAGFC,IAAI,CAAE,EAHJ,CAIFC,oBAAoB,CAAE,CAJpB,CAIuB;AACzBC,OAAO,CAAEC,IALP,CAMFC,OAAO,CAAED,IANP,CAOFE,OAAO,CAAE,KAPP,CAQFC,QAAQ,CAAE,KARR,CAQe;AACjBC,UAAU,CAAE,KATV,CAFW,CAArB,CAgBA;AACQ,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAGL,IAFnBC,CAAAA,KAEmB,2DAFOd,YAEP,IADnBe,CAAAA,MACmB,2CACnB,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,wBAAL,CACI,sCAAWF,KAAX,MAAkBb,UAAU,CAAEc,MAAM,CAACE,KAArC,GACJ,IAAK,qBAAL,CACI,sCAAWH,KAAX,MAAkBZ,IAAI,CAAEa,MAAM,CAACG,QAA/B,GACJ,QACI,MAAOJ,CAAAA,KAAP,CANR,CAQH,CAZM,CAcf;AACQ,MAAO,IAAMK,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACF,KAAD,QAC1B,CAACD,IAAI,CAAE,wBAAP,CAAiCC,KAAK,CAALA,KAAjC,CAD0B,EAAxB,CAIf,MAAO,IAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACF,QAAD,CAAiC,CAC1D,MAAO,CACHF,IAAI,CAAE,qBADH,CAEHE,QAAQ,CAARA,QAFG,CAAP,CAIH,CALM,CAQP;AACQ,MAAO,IAAMG,CAAAA,OAAO,CAChB,QADSA,CAAAA,OACT,CAACC,IAAD,QAAqB,UAACC,QAAD,CAAqC,CACtDA,QAAQ,CAACxB,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAF,OAAO,CAAC2B,KAAR,CAAcF,IAAd,EACKG,IADL,CACU,SAACC,GAAD,CAAS,CACXH,QAAQ,CAACJ,eAAe,CAAC,IAAD,CAAhB,CAAR,CACAI,QAAQ,CAACH,aAAa,CAACM,GAAG,CAACJ,IAAL,CAAd,CAAR,CACAC,QAAQ,CAACxB,WAAW,CAAC,KAAD,CAAZ,CAAR,CACH,CALL,EAMK4B,KANL,CAMW,SAACC,CAAD,CAAO,CACV,GAAMC,CAAAA,KAAK,CAAGD,CAAC,CAACE,QAAF,CACRF,CAAC,CAACE,QAAF,CAAWR,IAAX,CAAgBO,KADR,CAERD,CAAC,CAACG,OAAF,CAAY,+BAFlB,CAGAR,QAAQ,CAACzB,UAAU,CAAC+B,KAAD,CAAX,CAAR,CACA,CACAN,QAAQ,CAACxB,WAAW,CAAC,KAAD,CAAZ,CAAR,CACH,CAbL,EAcH,CAhBD,EADG,CAmBP,MAAO,IAAMiC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,SAAM,UAACT,QAAD,CAAqC,CAC/DA,QAAQ,CAACxB,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAF,OAAO,CAACoC,MAAR,GACKR,IADL,CACU,SAACC,GAAD,CAAS,CACXH,QAAQ,CAACJ,eAAe,CAAC,KAAD,CAAhB,CAAR,CACAI,QAAQ,CAACxB,WAAW,CAAC,KAAD,CAAZ,CAAR,CACH,CAJL,EAKK4B,KALL,CAKW,SAACC,CAAD,CAAO,CACV,GAAMC,CAAAA,KAAK,CAAGD,CAAC,CAACE,QAAF,CACRF,CAAC,CAACE,QAAF,CAAWR,IAAX,CAAgBO,KADR,CAERD,CAAC,CAACG,OAAF,CAAY,+BAFlB,CAGAR,QAAQ,CAACzB,UAAU,CAAC+B,KAAD,CAAX,CAAR,CACAN,QAAQ,CAACxB,WAAW,CAAC,KAAD,CAAZ,CAAR,CACH,CAXL,EAYH,CAduB,EAAjB","sourcesContent":["import {Dispatch} from 'redux';\nimport {LoginType, ResponseLoginType, AuthAPI} from '../dal/api';\nimport {setErrorAC, setErrorACType, setStatusAC, setStatusACType} from './app-reducer';\n\n// types\ntype InitialStateType = typeof initialState;\n\nexport type setIsLoggedInACType = ReturnType<typeof setIsLoggedInAC>;\ntype ActionsType =\n    | ReturnType<typeof setIsLoggedInAC>\n    | ReturnType<typeof setUserDataAC>\n    | setErrorACType\n    | setStatusACType\n\nconst initialState = {\n    isLoggedIn: false as boolean,\n    user: {\n        _id: '',\n        email: '',\n        name: '',\n        publicCardPacksCount: 0, // количество колод\n        created: Date,\n        updated: Date,\n        isAdmin: false,\n        verified: false, // подтвердил ли почту\n        rememberMe: false,\n    } as ResponseLoginType | {}\n}\n\n\n// reducer\n        export const loginReducer = (\n            state: InitialStateType = initialState,\n            action: ActionsType\n        ): InitialStateType => {\n            switch (action.type) {\n                case 'LOGIN/SET-IS-LOGGED-IN':\n                    return {...state, isLoggedIn: action.value};\n                case 'LOGIN/SET_USER_DATA':\n                    return {...state, user: action.userData};\n                default:\n                    return state;\n            }\n        };\n\n// actions\n        export const setIsLoggedInAC = (value: boolean) =>\n            ({type: 'LOGIN/SET-IS-LOGGED-IN', value} as const);\n\n\nexport const setUserDataAC = (userData: ResponseLoginType) => {\n    return {\n        type: 'LOGIN/SET_USER_DATA',\n        userData,\n    } as const;\n};\n\n\n// thunks\n        export const loginTC =\n            (data: LoginType) => (dispatch: Dispatch<ActionsType>) => {\n                dispatch(setStatusAC(true));\n                AuthAPI.login(data)\n                    .then((res) => {\n                        dispatch(setIsLoggedInAC(true));\n                        dispatch(setUserDataAC(res.data));\n                        dispatch(setStatusAC(false));\n                    })\n                    .catch((e) => {\n                        const error = e.response\n                            ? e.response.data.error\n                            : e.message + ', more details in the console';\n                        dispatch(setErrorAC(error));\n                        ;\n                        dispatch(setStatusAC(false));\n                    });\n            };\n\n        export const logoutTC = () => (dispatch: Dispatch<ActionsType>) => {\n            dispatch(setStatusAC(true));\n            AuthAPI.logout()\n                .then((res) => {\n                    dispatch(setIsLoggedInAC(false));\n                    dispatch(setStatusAC(false));\n                })\n                .catch((e) => {\n                    const error = e.response\n                        ? e.response.data.error\n                        : e.message + ', more details in the console';\n                    dispatch(setErrorAC(error));\n                    dispatch(setStatusAC(false));\n                });\n        };\n"]},"metadata":{},"sourceType":"module"}